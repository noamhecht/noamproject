{"id":"node_modules/draft-js/lib/getEntityKeyForSelection.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590320305554}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getEntityKeyForSelection\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Return the entity key that should be used when inserting text for the\r\n * specified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\r\n * and `SEGMENTED` entities should not be used for insertion behavior.\r\n */\r\nfunction getEntityKeyForSelection(contentState, targetSelection) {\r\n  var entityKey;\r\n\r\n  if (targetSelection.isCollapsed()) {\r\n    var key = targetSelection.getAnchorKey();\r\n    var offset = targetSelection.getAnchorOffset();\r\n    if (offset > 0) {\r\n      entityKey = contentState.getBlockForKey(key).getEntityAt(offset - 1);\r\n      if (entityKey !== contentState.getBlockForKey(key).getEntityAt(offset)) {\r\n        return null;\r\n      }\r\n      return filterKey(contentState.getEntityMap(), entityKey);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  var startKey = targetSelection.getStartKey();\r\n  var startOffset = targetSelection.getStartOffset();\r\n  var startBlock = contentState.getBlockForKey(startKey);\r\n\r\n  entityKey = startOffset === startBlock.getLength() ? null : startBlock.getEntityAt(startOffset);\r\n\r\n  return filterKey(contentState.getEntityMap(), entityKey);\r\n}\r\n\r\n/**\r\n * Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\r\n * return it. If not, return null.\r\n */\r\nfunction filterKey(entityMap, entityKey) {\r\n  if (entityKey) {\r\n    var entity = entityMap.__get(entityKey);\r\n    return entity.getMutability() === 'MUTABLE' ? entityKey : null;\r\n  }\r\n  return null;\r\n}\r\n\r\nmodule.exports = getEntityKeyForSelection;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/getEntityKeyForSelection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/draft-js/lib/getEntityKeyForSelection.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule getEntityKeyForSelection\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Return the entity key that should be used when inserting text for the\r\n * specified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\r\n * and `SEGMENTED` entities should not be used for insertion behavior.\r\n */\r\nfunction getEntityKeyForSelection(contentState, targetSelection) {\r\n  var entityKey;\r\n\r\n  if (targetSelection.isCollapsed()) {\r\n    var key = targetSelection.getAnchorKey();\r\n    var offset = targetSelection.getAnchorOffset();\r\n    if (offset > 0) {\r\n      entityKey = contentState.getBlockForKey(key).getEntityAt(offset - 1);\r\n      if (entityKey !== contentState.getBlockForKey(key).getEntityAt(offset)) {\r\n        return null;\r\n      }\r\n      return filterKey(contentState.getEntityMap(), entityKey);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  var startKey = targetSelection.getStartKey();\r\n  var startOffset = targetSelection.getStartOffset();\r\n  var startBlock = contentState.getBlockForKey(startKey);\r\n\r\n  entityKey = startOffset === startBlock.getLength() ? null : startBlock.getEntityAt(startOffset);\r\n\r\n  return filterKey(contentState.getEntityMap(), entityKey);\r\n}\r\n\r\n/**\r\n * Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\r\n * return it. If not, return null.\r\n */\r\nfunction filterKey(entityMap, entityKey) {\r\n  if (entityKey) {\r\n    var entity = entityMap.__get(entityKey);\r\n    return entity.getMutability() === 'MUTABLE' ? entityKey : null;\r\n  }\r\n  return null;\r\n}\r\n\r\nmodule.exports = getEntityKeyForSelection;"},"lineCount":58}},"error":null,"hash":"c819f190266058ff57cba1f18eb6576d","cacheData":{"env":{}}}