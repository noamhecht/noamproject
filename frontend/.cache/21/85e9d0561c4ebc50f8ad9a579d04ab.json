{"id":"node_modules/async-validator/es/rule/whitespace.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\package.json","includedInParent":true,"mtime":1590320300958},{"name":"../util","loc":{"line":7,"column":20},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\rule\\whitespace.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\util.js"}],"generated":{"js":"'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _util = require('../util');\r\n\r\nvar util = _interopRequireWildcard(_util);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\r\n\r\n/**\r\n *  Rule for validating whitespace.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param source The source object being validated.\r\n *  @param errors An array of errors that this rule may add\r\n *  validation errors to.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\r\nfunction whitespace(rule, value, source, errors, options) {\r\n  if (/^\\s+$/.test(value) || value === '') {\r\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\r\n  }\r\n}\r\n\r\nexports['default'] = whitespace;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/async-validator/es/rule/whitespace.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/async-validator/es/rule/whitespace.js":"'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _util = require('../util');\r\n\r\nvar util = _interopRequireWildcard(_util);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\r\n\r\n/**\r\n *  Rule for validating whitespace.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param source The source object being validated.\r\n *  @param errors An array of errors that this rule may add\r\n *  validation errors to.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\r\nfunction whitespace(rule, value, source, errors, options) {\r\n  if (/^\\s+$/.test(value) || value === '') {\r\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\r\n  }\r\n}\r\n\r\nexports['default'] = whitespace;"},"lineCount":30}},"error":null,"hash":"7f2ae20ce1b119514f3fd1e1558488dc","cacheData":{"env":{}}}