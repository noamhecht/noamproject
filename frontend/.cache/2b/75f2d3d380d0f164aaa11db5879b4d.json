{"id":"node_modules/draft-js/lib/editOnFocus.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590320305554},{"name":"./EditorState","loc":{"line":16,"column":26},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\editOnFocus.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js"},{"name":"fbjs/lib/UserAgent","loc":{"line":17,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\editOnFocus.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\fbjs\\lib\\UserAgent.js"}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule editOnFocus\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar EditorState = require('./EditorState');\r\nvar UserAgent = require('fbjs/lib/UserAgent');\r\n\r\nfunction editOnFocus(editor, e) {\r\n  var editorState = editor._latestEditorState;\r\n  var currentSelection = editorState.getSelection();\r\n  if (currentSelection.getHasFocus()) {\r\n    return;\r\n  }\r\n\r\n  var selection = currentSelection.set('hasFocus', true);\r\n  editor.props.onFocus && editor.props.onFocus(e);\r\n\r\n  // When the tab containing this text editor is hidden and the user does a\r\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\r\n  // selection was right after sending this focus event and (if you let it)\r\n  // moves the cursor back to the beginning of the editor, so we force the\r\n  // selection here instead of simply accepting it in order to preserve the\r\n  // old cursor position. See https://crbug.com/540004.\r\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\r\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\r\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\r\n  // doesn't preserve the selection, matching how textareas work.\r\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\r\n    editor.update(EditorState.forceSelection(editorState, selection));\r\n  } else {\r\n    editor.update(EditorState.acceptSelection(editorState, selection));\r\n  }\r\n}\r\n\r\nmodule.exports = editOnFocus;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/editOnFocus.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/draft-js/lib/editOnFocus.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule editOnFocus\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar EditorState = require('./EditorState');\r\nvar UserAgent = require('fbjs/lib/UserAgent');\r\n\r\nfunction editOnFocus(editor, e) {\r\n  var editorState = editor._latestEditorState;\r\n  var currentSelection = editorState.getSelection();\r\n  if (currentSelection.getHasFocus()) {\r\n    return;\r\n  }\r\n\r\n  var selection = currentSelection.set('hasFocus', true);\r\n  editor.props.onFocus && editor.props.onFocus(e);\r\n\r\n  // When the tab containing this text editor is hidden and the user does a\r\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\r\n  // selection was right after sending this focus event and (if you let it)\r\n  // moves the cursor back to the beginning of the editor, so we force the\r\n  // selection here instead of simply accepting it in order to preserve the\r\n  // old cursor position. See https://crbug.com/540004.\r\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\r\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\r\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\r\n  // doesn't preserve the selection, matching how textareas work.\r\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\r\n    editor.update(EditorState.forceSelection(editorState, selection));\r\n  } else {\r\n    editor.update(EditorState.acceptSelection(editorState, selection));\r\n  }\r\n}\r\n\r\nmodule.exports = editOnFocus;"},"lineCount":46}},"error":null,"hash":"193b5e345b573365b5a06a2d35c869e0","cacheData":{"env":{}}}