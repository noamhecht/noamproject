{"id":"node_modules/fbjs/lib/cx.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\fbjs\\package.json","includedInParent":true,"mtime":1590320307693}],"generated":{"js":"'use strict';\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/**\r\n * This function is used to mark string literals representing CSS class names\r\n * so that they can be transformed statically. This allows for modularization\r\n * and minification of CSS class names.\r\n *\r\n * In static_upstream, this function is actually implemented, but it should\r\n * eventually be replaced with something more descriptive, and the transform\r\n * that is used in the main stack should be ported for use elsewhere.\r\n *\r\n * @param string|object className to modularize, or an object of key/values.\r\n *                      In the object case, the values are conditions that\r\n *                      determine if the className keys should be included.\r\n * @param [string ...]  Variable list of classNames in the string case.\r\n * @return string       Renderable space-separated CSS className.\r\n */\r\nfunction cx(classNames) {\r\n  if (typeof classNames == 'object') {\r\n    return Object.keys(classNames).filter(function (className) {\r\n      return classNames[className];\r\n    }).map(replace).join(' ');\r\n  }\r\n  return Array.prototype.map.call(arguments, replace).join(' ');\r\n}\r\n\r\nfunction replace(str) {\r\n  return str.replace(/\\//g, '-');\r\n}\r\n\r\nmodule.exports = cx;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fbjs/lib/cx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fbjs/lib/cx.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/fbjs/lib/cx.js":"'use strict';\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/**\r\n * This function is used to mark string literals representing CSS class names\r\n * so that they can be transformed statically. This allows for modularization\r\n * and minification of CSS class names.\r\n *\r\n * In static_upstream, this function is actually implemented, but it should\r\n * eventually be replaced with something more descriptive, and the transform\r\n * that is used in the main stack should be ported for use elsewhere.\r\n *\r\n * @param string|object className to modularize, or an object of key/values.\r\n *                      In the object case, the values are conditions that\r\n *                      determine if the className keys should be included.\r\n * @param [string ...]  Variable list of classNames in the string case.\r\n * @return string       Renderable space-separated CSS className.\r\n */\r\nfunction cx(classNames) {\r\n  if (typeof classNames == 'object') {\r\n    return Object.keys(classNames).filter(function (className) {\r\n      return classNames[className];\r\n    }).map(replace).join(' ');\r\n  }\r\n  return Array.prototype.map.call(arguments, replace).join(' ');\r\n}\r\n\r\nfunction replace(str) {\r\n  return str.replace(/\\//g, '-');\r\n}\r\n\r\nmodule.exports = cx;"},"lineCount":39}},"error":null,"hash":"760c4d510b5413a04b81a22479299c79","cacheData":{"env":{}}}