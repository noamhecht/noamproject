{"id":"node_modules/draft-js/lib/ContentState.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590303462313},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590303416264},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590303448001},{"name":"./BlockMapBuilder","loc":{"line":22,"column":30},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\BlockMapBuilder.js"},{"name":"./CharacterMetadata","loc":{"line":23,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\CharacterMetadata.js"},{"name":"./ContentBlock","loc":{"line":24,"column":27},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentBlock.js"},{"name":"./ContentBlockNode","loc":{"line":25,"column":31},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentBlockNode.js"},{"name":"./DraftEntity","loc":{"line":26,"column":26},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\DraftEntity.js"},{"name":"./DraftFeatureFlags","loc":{"line":27,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\DraftFeatureFlags.js"},{"name":"immutable","loc":{"line":28,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\immutable\\dist\\immutable.js"},{"name":"./SelectionState","loc":{"line":29,"column":29},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\SelectionState.js"},{"name":"./generateRandomKey","loc":{"line":31,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\generateRandomKey.js"},{"name":"./sanitizeDraftText","loc":{"line":32,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\sanitizeDraftText.js"}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ContentState\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar BlockMapBuilder = require('./BlockMapBuilder');\r\nvar CharacterMetadata = require('./CharacterMetadata');\r\nvar ContentBlock = require('./ContentBlock');\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar DraftEntity = require('./DraftEntity');\r\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\nvar sanitizeDraftText = require('./sanitizeDraftText');\r\n\r\nvar List = Immutable.List,\r\n    Record = Immutable.Record,\r\n    Repeat = Immutable.Repeat;\r\n\r\n\r\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\r\n\r\nvar defaultRecord = {\r\n  entityMap: null,\r\n  blockMap: null,\r\n  selectionBefore: null,\r\n  selectionAfter: null\r\n};\r\n\r\nvar ContentBlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\r\n\r\nvar ContentStateRecord = Record(defaultRecord);\r\n\r\nvar ContentState = function (_ContentStateRecord) {\r\n  _inherits(ContentState, _ContentStateRecord);\r\n\r\n  function ContentState() {\r\n    _classCallCheck(this, ContentState);\r\n\r\n    return _possibleConstructorReturn(this, _ContentStateRecord.apply(this, arguments));\r\n  }\r\n\r\n  ContentState.prototype.getEntityMap = function getEntityMap() {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity;\r\n  };\r\n\r\n  ContentState.prototype.getBlockMap = function getBlockMap() {\r\n    return this.get('blockMap');\r\n  };\r\n\r\n  ContentState.prototype.getSelectionBefore = function getSelectionBefore() {\r\n    return this.get('selectionBefore');\r\n  };\r\n\r\n  ContentState.prototype.getSelectionAfter = function getSelectionAfter() {\r\n    return this.get('selectionAfter');\r\n  };\r\n\r\n  ContentState.prototype.getBlockForKey = function getBlockForKey(key) {\r\n    var block = this.getBlockMap().get(key);\r\n    return block;\r\n  };\r\n\r\n  ContentState.prototype.getKeyBefore = function getKeyBefore(key) {\r\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\r\n      return v === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getKeyAfter = function getKeyAfter(key) {\r\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\r\n      return v === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlockAfter = function getBlockAfter(key) {\r\n    return this.getBlockMap().skipUntil(function (_, k) {\r\n      return k === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlockBefore = function getBlockBefore(key) {\r\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\r\n      return k === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlocksAsArray = function getBlocksAsArray() {\r\n    return this.getBlockMap().toArray();\r\n  };\r\n\r\n  ContentState.prototype.getFirstBlock = function getFirstBlock() {\r\n    return this.getBlockMap().first();\r\n  };\r\n\r\n  ContentState.prototype.getLastBlock = function getLastBlock() {\r\n    return this.getBlockMap().last();\r\n  };\r\n\r\n  ContentState.prototype.getPlainText = function getPlainText(delimiter) {\r\n    return this.getBlockMap().map(function (block) {\r\n      return block ? block.getText() : '';\r\n    }).join(delimiter || '\\n');\r\n  };\r\n\r\n  ContentState.prototype.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__getLastCreatedEntityKey();\r\n  };\r\n\r\n  ContentState.prototype.hasText = function hasText() {\r\n    var blockMap = this.getBlockMap();\r\n    return blockMap.size > 1 || blockMap.first().getLength() > 0;\r\n  };\r\n\r\n  ContentState.prototype.createEntity = function createEntity(type, mutability, data) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__create(type, mutability, data);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.mergeEntityData = function mergeEntityData(key, toMerge) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__mergeData(key, toMerge);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.replaceEntityData = function replaceEntityData(key, newData) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__replaceData(key, newData);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.addEntity = function addEntity(instance) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__add(instance);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.getEntity = function getEntity(key) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__get(key);\r\n  };\r\n\r\n  ContentState.createFromBlockArray = function createFromBlockArray(\r\n  // TODO: update flow type when we completely deprecate the old entity API\r\n  blocks, entityMap) {\r\n    // TODO: remove this when we completely deprecate the old entity API\r\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\r\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\r\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\r\n    return new ContentState({\r\n      blockMap: blockMap,\r\n      entityMap: entityMap || DraftEntity,\r\n      selectionBefore: selectionState,\r\n      selectionAfter: selectionState\r\n    });\r\n  };\r\n\r\n  ContentState.createFromText = function createFromText(text) {\r\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\r\n\r\n    var strings = text.split(delimiter);\r\n    var blocks = strings.map(function (block) {\r\n      block = sanitizeDraftText(block);\r\n      return new ContentBlockNodeRecord({\r\n        key: generateRandomKey(),\r\n        text: block,\r\n        type: 'unstyled',\r\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\r\n      });\r\n    });\r\n    return ContentState.createFromBlockArray(blocks);\r\n  };\r\n\r\n  return ContentState;\r\n}(ContentStateRecord);\r\n\r\nmodule.exports = ContentState;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/draft-js/lib/ContentState.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}}],"sources":{"node_modules/draft-js/lib/ContentState.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ContentState\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar BlockMapBuilder = require('./BlockMapBuilder');\r\nvar CharacterMetadata = require('./CharacterMetadata');\r\nvar ContentBlock = require('./ContentBlock');\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar DraftEntity = require('./DraftEntity');\r\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\nvar sanitizeDraftText = require('./sanitizeDraftText');\r\n\r\nvar List = Immutable.List,\r\n    Record = Immutable.Record,\r\n    Repeat = Immutable.Repeat;\r\n\r\n\r\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\r\n\r\nvar defaultRecord = {\r\n  entityMap: null,\r\n  blockMap: null,\r\n  selectionBefore: null,\r\n  selectionAfter: null\r\n};\r\n\r\nvar ContentBlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\r\n\r\nvar ContentStateRecord = Record(defaultRecord);\r\n\r\nvar ContentState = function (_ContentStateRecord) {\r\n  _inherits(ContentState, _ContentStateRecord);\r\n\r\n  function ContentState() {\r\n    _classCallCheck(this, ContentState);\r\n\r\n    return _possibleConstructorReturn(this, _ContentStateRecord.apply(this, arguments));\r\n  }\r\n\r\n  ContentState.prototype.getEntityMap = function getEntityMap() {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity;\r\n  };\r\n\r\n  ContentState.prototype.getBlockMap = function getBlockMap() {\r\n    return this.get('blockMap');\r\n  };\r\n\r\n  ContentState.prototype.getSelectionBefore = function getSelectionBefore() {\r\n    return this.get('selectionBefore');\r\n  };\r\n\r\n  ContentState.prototype.getSelectionAfter = function getSelectionAfter() {\r\n    return this.get('selectionAfter');\r\n  };\r\n\r\n  ContentState.prototype.getBlockForKey = function getBlockForKey(key) {\r\n    var block = this.getBlockMap().get(key);\r\n    return block;\r\n  };\r\n\r\n  ContentState.prototype.getKeyBefore = function getKeyBefore(key) {\r\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\r\n      return v === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getKeyAfter = function getKeyAfter(key) {\r\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\r\n      return v === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlockAfter = function getBlockAfter(key) {\r\n    return this.getBlockMap().skipUntil(function (_, k) {\r\n      return k === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlockBefore = function getBlockBefore(key) {\r\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\r\n      return k === key;\r\n    }).skip(1).first();\r\n  };\r\n\r\n  ContentState.prototype.getBlocksAsArray = function getBlocksAsArray() {\r\n    return this.getBlockMap().toArray();\r\n  };\r\n\r\n  ContentState.prototype.getFirstBlock = function getFirstBlock() {\r\n    return this.getBlockMap().first();\r\n  };\r\n\r\n  ContentState.prototype.getLastBlock = function getLastBlock() {\r\n    return this.getBlockMap().last();\r\n  };\r\n\r\n  ContentState.prototype.getPlainText = function getPlainText(delimiter) {\r\n    return this.getBlockMap().map(function (block) {\r\n      return block ? block.getText() : '';\r\n    }).join(delimiter || '\\n');\r\n  };\r\n\r\n  ContentState.prototype.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__getLastCreatedEntityKey();\r\n  };\r\n\r\n  ContentState.prototype.hasText = function hasText() {\r\n    var blockMap = this.getBlockMap();\r\n    return blockMap.size > 1 || blockMap.first().getLength() > 0;\r\n  };\r\n\r\n  ContentState.prototype.createEntity = function createEntity(type, mutability, data) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__create(type, mutability, data);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.mergeEntityData = function mergeEntityData(key, toMerge) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__mergeData(key, toMerge);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.replaceEntityData = function replaceEntityData(key, newData) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__replaceData(key, newData);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.addEntity = function addEntity(instance) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    DraftEntity.__add(instance);\r\n    return this;\r\n  };\r\n\r\n  ContentState.prototype.getEntity = function getEntity(key) {\r\n    // TODO: update this when we fully remove DraftEntity\r\n    return DraftEntity.__get(key);\r\n  };\r\n\r\n  ContentState.createFromBlockArray = function createFromBlockArray(\r\n  // TODO: update flow type when we completely deprecate the old entity API\r\n  blocks, entityMap) {\r\n    // TODO: remove this when we completely deprecate the old entity API\r\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\r\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\r\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\r\n    return new ContentState({\r\n      blockMap: blockMap,\r\n      entityMap: entityMap || DraftEntity,\r\n      selectionBefore: selectionState,\r\n      selectionAfter: selectionState\r\n    });\r\n  };\r\n\r\n  ContentState.createFromText = function createFromText(text) {\r\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\r\n\r\n    var strings = text.split(delimiter);\r\n    var blocks = strings.map(function (block) {\r\n      block = sanitizeDraftText(block);\r\n      return new ContentBlockNodeRecord({\r\n        key: generateRandomKey(),\r\n        text: block,\r\n        type: 'unstyled',\r\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\r\n      });\r\n    });\r\n    return ContentState.createFromBlockArray(blocks);\r\n  };\r\n\r\n  return ContentState;\r\n}(ContentStateRecord);\r\n\r\nmodule.exports = ContentState;"},"lineCount":198}},"error":null,"hash":"3c779396749fa1ac9793acafef2b0862","cacheData":{"env":{}}}