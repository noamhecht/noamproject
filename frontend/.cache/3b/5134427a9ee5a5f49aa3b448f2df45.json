{"id":"node_modules/fbjs/lib/hyphenate.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\fbjs\\package.json","includedInParent":true,"mtime":1590320307693}],"generated":{"js":"'use strict';\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n\r\nvar _uppercasePattern = /([A-Z])/g;\r\n\r\n/**\r\n * Hyphenates a camelcased string, for example:\r\n *\r\n *   > hyphenate('backgroundColor')\r\n *   < \"background-color\"\r\n *\r\n * For CSS style names, use `hyphenateStyleName` instead which works properly\r\n * with all vendor prefixes, including `ms`.\r\n *\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nfunction hyphenate(string) {\r\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\r\n}\r\n\r\nmodule.exports = hyphenate;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/fbjs/lib/hyphenate.js":"'use strict';\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n\r\nvar _uppercasePattern = /([A-Z])/g;\r\n\r\n/**\r\n * Hyphenates a camelcased string, for example:\r\n *\r\n *   > hyphenate('backgroundColor')\r\n *   < \"background-color\"\r\n *\r\n * For CSS style names, use `hyphenateStyleName` instead which works properly\r\n * with all vendor prefixes, including `ms`.\r\n *\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nfunction hyphenate(string) {\r\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\r\n}\r\n\r\nmodule.exports = hyphenate;"},"lineCount":30}},"error":null,"hash":"ccca4a7c37a0da1752325d12146b171c","cacheData":{"env":{}}}