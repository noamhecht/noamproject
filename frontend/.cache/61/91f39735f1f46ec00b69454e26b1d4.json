{"id":"node_modules/draft-js/lib/findRangesImmutable.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590303462313},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590303416264},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590303448001}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findRangesImmutable\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Search through an array to find contiguous stretches of elements that\r\n * match a specified filter function.\r\n *\r\n * When ranges are found, execute a specified `found` function to supply\r\n * the values to the caller.\r\n */\r\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\r\n  if (!haystack.size) {\r\n    return;\r\n  }\r\n\r\n  var cursor = 0;\r\n\r\n  haystack.reduce(function (value, nextValue, nextIndex) {\r\n    if (!areEqualFn(value, nextValue)) {\r\n      if (filterFn(value)) {\r\n        foundFn(cursor, nextIndex);\r\n      }\r\n      cursor = nextIndex;\r\n    }\r\n    return nextValue;\r\n  });\r\n\r\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\r\n}\r\n\r\nmodule.exports = findRangesImmutable;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/findRangesImmutable.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/draft-js/lib/findRangesImmutable.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findRangesImmutable\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Search through an array to find contiguous stretches of elements that\r\n * match a specified filter function.\r\n *\r\n * When ranges are found, execute a specified `found` function to supply\r\n * the values to the caller.\r\n */\r\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\r\n  if (!haystack.size) {\r\n    return;\r\n  }\r\n\r\n  var cursor = 0;\r\n\r\n  haystack.reduce(function (value, nextValue, nextIndex) {\r\n    if (!areEqualFn(value, nextValue)) {\r\n      if (filterFn(value)) {\r\n        foundFn(cursor, nextIndex);\r\n      }\r\n      cursor = nextIndex;\r\n    }\r\n    return nextValue;\r\n  });\r\n\r\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\r\n}\r\n\r\nmodule.exports = findRangesImmutable;"},"lineCount":43}},"error":null,"hash":"5fba60239d20a05276e6f7a03c8b4e37","cacheData":{"env":{}}}