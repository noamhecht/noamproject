{"id":"node_modules/draft-js/lib/EditorState.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590320305554},{"name":"object-assign","loc":{"line":16,"column":22},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\object-assign\\index.js"},{"name":"./BlockTree","loc":{"line":22,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\BlockTree.js"},{"name":"./ContentState","loc":{"line":23,"column":27},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentState.js"},{"name":"./EditorBidiService","loc":{"line":24,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorBidiService.js"},{"name":"immutable","loc":{"line":25,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\immutable\\dist\\immutable.js"},{"name":"./SelectionState","loc":{"line":26,"column":29},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\SelectionState.js"}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EditorState\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\n\r\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar BlockTree = require('./BlockTree');\r\nvar ContentState = require('./ContentState');\r\nvar EditorBidiService = require('./EditorBidiService');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar OrderedSet = Immutable.OrderedSet,\r\n    Record = Immutable.Record,\r\n    Stack = Immutable.Stack;\r\n\r\n\r\nvar defaultRecord = {\r\n  allowUndo: true,\r\n  currentContent: null,\r\n  decorator: null,\r\n  directionMap: null,\r\n  forceSelection: false,\r\n  inCompositionMode: false,\r\n  inlineStyleOverride: null,\r\n  lastChangeType: null,\r\n  nativelyRenderedContent: null,\r\n  redoStack: Stack(),\r\n  selection: null,\r\n  treeMap: null,\r\n  undoStack: Stack()\r\n};\r\n\r\nvar EditorStateRecord = Record(defaultRecord);\r\n\r\nvar EditorState = function () {\r\n  EditorState.createEmpty = function createEmpty(decorator) {\r\n    return EditorState.createWithContent(ContentState.createFromText(''), decorator);\r\n  };\r\n\r\n  EditorState.createWithContent = function createWithContent(contentState, decorator) {\r\n    var firstKey = contentState.getBlockMap().first().getKey();\r\n    return EditorState.create({\r\n      currentContent: contentState,\r\n      undoStack: Stack(),\r\n      redoStack: Stack(),\r\n      decorator: decorator || null,\r\n      selection: SelectionState.createEmpty(firstKey)\r\n    });\r\n  };\r\n\r\n  EditorState.create = function create(config) {\r\n    var currentContent = config.currentContent,\r\n        decorator = config.decorator;\r\n\r\n    var recordConfig = _extends({}, config, {\r\n      treeMap: generateNewTreeMap(currentContent, decorator),\r\n      directionMap: EditorBidiService.getDirectionMap(currentContent)\r\n    });\r\n    return new EditorState(new EditorStateRecord(recordConfig));\r\n  };\r\n\r\n  EditorState.set = function set(editorState, put) {\r\n    var map = editorState.getImmutable().withMutations(function (state) {\r\n      var existingDecorator = state.get('decorator');\r\n      var decorator = existingDecorator;\r\n      if (put.decorator === null) {\r\n        decorator = null;\r\n      } else if (put.decorator) {\r\n        decorator = put.decorator;\r\n      }\r\n\r\n      var newContent = put.currentContent || editorState.getCurrentContent();\r\n\r\n      if (decorator !== existingDecorator) {\r\n        var treeMap = state.get('treeMap');\r\n        var newTreeMap;\r\n        if (decorator && existingDecorator) {\r\n          newTreeMap = regenerateTreeForNewDecorator(newContent, newContent.getBlockMap(), treeMap, decorator, existingDecorator);\r\n        } else {\r\n          newTreeMap = generateNewTreeMap(newContent, decorator);\r\n        }\r\n\r\n        state.merge({\r\n          decorator: decorator,\r\n          treeMap: newTreeMap,\r\n          nativelyRenderedContent: null\r\n        });\r\n        return;\r\n      }\r\n\r\n      var existingContent = editorState.getCurrentContent();\r\n      if (newContent !== existingContent) {\r\n        state.set('treeMap', regenerateTreeForNewBlocks(editorState, newContent.getBlockMap(), newContent.getEntityMap(), decorator));\r\n      }\r\n\r\n      state.merge(put);\r\n    });\r\n\r\n    return new EditorState(map);\r\n  };\r\n\r\n  EditorState.prototype.toJS = function toJS() {\r\n    return this.getImmutable().toJS();\r\n  };\r\n\r\n  EditorState.prototype.getAllowUndo = function getAllowUndo() {\r\n    return this.getImmutable().get('allowUndo');\r\n  };\r\n\r\n  EditorState.prototype.getCurrentContent = function getCurrentContent() {\r\n    return this.getImmutable().get('currentContent');\r\n  };\r\n\r\n  EditorState.prototype.getUndoStack = function getUndoStack() {\r\n    return this.getImmutable().get('undoStack');\r\n  };\r\n\r\n  EditorState.prototype.getRedoStack = function getRedoStack() {\r\n    return this.getImmutable().get('redoStack');\r\n  };\r\n\r\n  EditorState.prototype.getSelection = function getSelection() {\r\n    return this.getImmutable().get('selection');\r\n  };\r\n\r\n  EditorState.prototype.getDecorator = function getDecorator() {\r\n    return this.getImmutable().get('decorator');\r\n  };\r\n\r\n  EditorState.prototype.isInCompositionMode = function isInCompositionMode() {\r\n    return this.getImmutable().get('inCompositionMode');\r\n  };\r\n\r\n  EditorState.prototype.mustForceSelection = function mustForceSelection() {\r\n    return this.getImmutable().get('forceSelection');\r\n  };\r\n\r\n  EditorState.prototype.getNativelyRenderedContent = function getNativelyRenderedContent() {\r\n    return this.getImmutable().get('nativelyRenderedContent');\r\n  };\r\n\r\n  EditorState.prototype.getLastChangeType = function getLastChangeType() {\r\n    return this.getImmutable().get('lastChangeType');\r\n  };\r\n\r\n  /**\r\n   * While editing, the user may apply inline style commands with a collapsed\r\n   * cursor, intending to type text that adopts the specified style. In this\r\n   * case, we track the specified style as an \"override\" that takes precedence\r\n   * over the inline style of the text adjacent to the cursor.\r\n   *\r\n   * If null, there is no override in place.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getInlineStyleOverride = function getInlineStyleOverride() {\r\n    return this.getImmutable().get('inlineStyleOverride');\r\n  };\r\n\r\n  EditorState.setInlineStyleOverride = function setInlineStyleOverride(editorState, inlineStyleOverride) {\r\n    return EditorState.set(editorState, { inlineStyleOverride: inlineStyleOverride });\r\n  };\r\n\r\n  /**\r\n   * Get the appropriate inline style for the editor state. If an\r\n   * override is in place, use it. Otherwise, the current style is\r\n   * based on the location of the selection state.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getCurrentInlineStyle = function getCurrentInlineStyle() {\r\n    var override = this.getInlineStyleOverride();\r\n    if (override != null) {\r\n      return override;\r\n    }\r\n\r\n    var content = this.getCurrentContent();\r\n    var selection = this.getSelection();\r\n\r\n    if (selection.isCollapsed()) {\r\n      return getInlineStyleForCollapsedSelection(content, selection);\r\n    }\r\n\r\n    return getInlineStyleForNonCollapsedSelection(content, selection);\r\n  };\r\n\r\n  EditorState.prototype.getBlockTree = function getBlockTree(blockKey) {\r\n    return this.getImmutable().getIn(['treeMap', blockKey]);\r\n  };\r\n\r\n  EditorState.prototype.isSelectionAtStartOfContent = function isSelectionAtStartOfContent() {\r\n    var firstKey = this.getCurrentContent().getBlockMap().first().getKey();\r\n    return this.getSelection().hasEdgeWithin(firstKey, 0, 0);\r\n  };\r\n\r\n  EditorState.prototype.isSelectionAtEndOfContent = function isSelectionAtEndOfContent() {\r\n    var content = this.getCurrentContent();\r\n    var blockMap = content.getBlockMap();\r\n    var last = blockMap.last();\r\n    var end = last.getLength();\r\n    return this.getSelection().hasEdgeWithin(last.getKey(), end, end);\r\n  };\r\n\r\n  EditorState.prototype.getDirectionMap = function getDirectionMap() {\r\n    return this.getImmutable().get('directionMap');\r\n  };\r\n\r\n  /**\r\n   * Incorporate native DOM selection changes into the EditorState. This\r\n   * method can be used when we simply want to accept whatever the DOM\r\n   * has given us to represent selection, and we do not need to re-render\r\n   * the editor.\r\n   *\r\n   * To forcibly move the DOM selection, see `EditorState.forceSelection`.\r\n   */\r\n\r\n\r\n  EditorState.acceptSelection = function acceptSelection(editorState, selection) {\r\n    return updateSelection(editorState, selection, false);\r\n  };\r\n\r\n  /**\r\n   * At times, we need to force the DOM selection to be where we\r\n   * need it to be. This can occur when the anchor or focus nodes\r\n   * are non-text nodes, for instance. In this case, we want to trigger\r\n   * a re-render of the editor, which in turn forces selection into\r\n   * the correct place in the DOM. The `forceSelection` method\r\n   * accomplishes this.\r\n   *\r\n   * This method should be used in cases where you need to explicitly\r\n   * move the DOM selection from one place to another without a change\r\n   * in ContentState.\r\n   */\r\n\r\n\r\n  EditorState.forceSelection = function forceSelection(editorState, selection) {\r\n    if (!selection.getHasFocus()) {\r\n      selection = selection.set('hasFocus', true);\r\n    }\r\n    return updateSelection(editorState, selection, true);\r\n  };\r\n\r\n  /**\r\n   * Move selection to the end of the editor without forcing focus.\r\n   */\r\n\r\n\r\n  EditorState.moveSelectionToEnd = function moveSelectionToEnd(editorState) {\r\n    var content = editorState.getCurrentContent();\r\n    var lastBlock = content.getLastBlock();\r\n    var lastKey = lastBlock.getKey();\r\n    var length = lastBlock.getLength();\r\n\r\n    return EditorState.acceptSelection(editorState, new SelectionState({\r\n      anchorKey: lastKey,\r\n      anchorOffset: length,\r\n      focusKey: lastKey,\r\n      focusOffset: length,\r\n      isBackward: false\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Force focus to the end of the editor. This is useful in scenarios\r\n   * where we want to programmatically focus the input and it makes sense\r\n   * to allow the user to continue working seamlessly.\r\n   */\r\n\r\n\r\n  EditorState.moveFocusToEnd = function moveFocusToEnd(editorState) {\r\n    var afterSelectionMove = EditorState.moveSelectionToEnd(editorState);\r\n    return EditorState.forceSelection(afterSelectionMove, afterSelectionMove.getSelection());\r\n  };\r\n\r\n  /**\r\n   * Push the current ContentState onto the undo stack if it should be\r\n   * considered a boundary state, and set the provided ContentState as the\r\n   * new current content.\r\n   */\r\n\r\n\r\n  EditorState.push = function push(editorState, contentState, changeType) {\r\n    if (editorState.getCurrentContent() === contentState) {\r\n      return editorState;\r\n    }\r\n\r\n    var forceSelection = changeType !== 'insert-characters';\r\n    var directionMap = EditorBidiService.getDirectionMap(contentState, editorState.getDirectionMap());\r\n\r\n    if (!editorState.getAllowUndo()) {\r\n      return EditorState.set(editorState, {\r\n        currentContent: contentState,\r\n        directionMap: directionMap,\r\n        lastChangeType: changeType,\r\n        selection: contentState.getSelectionAfter(),\r\n        forceSelection: forceSelection,\r\n        inlineStyleOverride: null\r\n      });\r\n    }\r\n\r\n    var selection = editorState.getSelection();\r\n    var currentContent = editorState.getCurrentContent();\r\n    var undoStack = editorState.getUndoStack();\r\n    var newContent = contentState;\r\n\r\n    if (selection !== currentContent.getSelectionAfter() || mustBecomeBoundary(editorState, changeType)) {\r\n      undoStack = undoStack.push(currentContent);\r\n      newContent = newContent.set('selectionBefore', selection);\r\n    } else if (changeType === 'insert-characters' || changeType === 'backspace-character' || changeType === 'delete-character') {\r\n      // Preserve the previous selection.\r\n      newContent = newContent.set('selectionBefore', currentContent.getSelectionBefore());\r\n    }\r\n\r\n    var inlineStyleOverride = editorState.getInlineStyleOverride();\r\n\r\n    // Don't discard inline style overrides for the following change types:\r\n    var overrideChangeTypes = ['adjust-depth', 'change-block-type', 'split-block'];\r\n\r\n    if (overrideChangeTypes.indexOf(changeType) === -1) {\r\n      inlineStyleOverride = null;\r\n    }\r\n\r\n    var editorStateChanges = {\r\n      currentContent: newContent,\r\n      directionMap: directionMap,\r\n      undoStack: undoStack,\r\n      redoStack: Stack(),\r\n      lastChangeType: changeType,\r\n      selection: contentState.getSelectionAfter(),\r\n      forceSelection: forceSelection,\r\n      inlineStyleOverride: inlineStyleOverride\r\n    };\r\n\r\n    return EditorState.set(editorState, editorStateChanges);\r\n  };\r\n\r\n  /**\r\n   * Make the top ContentState in the undo stack the new current content and\r\n   * push the current content onto the redo stack.\r\n   */\r\n\r\n\r\n  EditorState.undo = function undo(editorState) {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    var undoStack = editorState.getUndoStack();\r\n    var newCurrentContent = undoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    var currentContent = editorState.getCurrentContent();\r\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap: directionMap,\r\n      undoStack: undoStack.shift(),\r\n      redoStack: editorState.getRedoStack().push(currentContent),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'undo',\r\n      nativelyRenderedContent: null,\r\n      selection: currentContent.getSelectionBefore()\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Make the top ContentState in the redo stack the new current content and\r\n   * push the current content onto the undo stack.\r\n   */\r\n\r\n\r\n  EditorState.redo = function redo(editorState) {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    var redoStack = editorState.getRedoStack();\r\n    var newCurrentContent = redoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    var currentContent = editorState.getCurrentContent();\r\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap: directionMap,\r\n      undoStack: editorState.getUndoStack().push(currentContent),\r\n      redoStack: redoStack.shift(),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'redo',\r\n      nativelyRenderedContent: null,\r\n      selection: newCurrentContent.getSelectionAfter()\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n\r\n\r\n  function EditorState(immutable) {\r\n    _classCallCheck(this, EditorState);\r\n\r\n    this._immutable = immutable;\r\n  }\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getImmutable = function getImmutable() {\r\n    return this._immutable;\r\n  };\r\n\r\n  return EditorState;\r\n}();\r\n\r\n/**\r\n * Set the supplied SelectionState as the new current selection, and set\r\n * the `force` flag to trigger manual selection placement by the view.\r\n */\r\n\r\n\r\nfunction updateSelection(editorState, selection, forceSelection) {\r\n  return EditorState.set(editorState, {\r\n    selection: selection,\r\n    forceSelection: forceSelection,\r\n    nativelyRenderedContent: null,\r\n    inlineStyleOverride: null\r\n  });\r\n}\r\n\r\n/**\r\n * Regenerate the entire tree map for a given ContentState and decorator.\r\n * Returns an OrderedMap that maps all available ContentBlock objects.\r\n */\r\nfunction generateNewTreeMap(contentState, decorator) {\r\n  return contentState.getBlockMap().map(function (block) {\r\n    return BlockTree.generate(contentState, block, decorator);\r\n  }).toOrderedMap();\r\n}\r\n\r\n/**\r\n * Regenerate tree map objects for all ContentBlocks that have changed\r\n * between the current editorState and newContent. Returns an OrderedMap\r\n * with only changed regenerated tree map objects.\r\n */\r\nfunction regenerateTreeForNewBlocks(editorState, newBlockMap, newEntityMap, decorator) {\r\n  var contentState = editorState.getCurrentContent().set('entityMap', newEntityMap);\r\n  var prevBlockMap = contentState.getBlockMap();\r\n  var prevTreeMap = editorState.getImmutable().get('treeMap');\r\n  return prevTreeMap.merge(newBlockMap.toSeq().filter(function (block, key) {\r\n    return block !== prevBlockMap.get(key);\r\n  }).map(function (block) {\r\n    return BlockTree.generate(contentState, block, decorator);\r\n  }));\r\n}\r\n\r\n/**\r\n * Generate tree map objects for a new decorator object, preserving any\r\n * decorations that are unchanged from the previous decorator.\r\n *\r\n * Note that in order for this to perform optimally, decoration Lists for\r\n * decorators should be preserved when possible to allow for direct immutable\r\n * List comparison.\r\n */\r\nfunction regenerateTreeForNewDecorator(content, blockMap, previousTreeMap, decorator, existingDecorator) {\r\n  return previousTreeMap.merge(blockMap.toSeq().filter(function (block) {\r\n    return decorator.getDecorations(block, content) !== existingDecorator.getDecorations(block, content);\r\n  }).map(function (block) {\r\n    return BlockTree.generate(content, block, decorator);\r\n  }));\r\n}\r\n\r\n/**\r\n * Return whether a change should be considered a boundary state, given\r\n * the previous change type. Allows us to discard potential boundary states\r\n * during standard typing or deletion behavior.\r\n */\r\nfunction mustBecomeBoundary(editorState, changeType) {\r\n  var lastChangeType = editorState.getLastChangeType();\r\n  return changeType !== lastChangeType || changeType !== 'insert-characters' && changeType !== 'backspace-character' && changeType !== 'delete-character';\r\n}\r\n\r\nfunction getInlineStyleForCollapsedSelection(content, selection) {\r\n  var startKey = selection.getStartKey();\r\n  var startOffset = selection.getStartOffset();\r\n  var startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If the cursor is not at the start of the block, look backward to\r\n  // preserve the style of the preceding character.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // The caret is at position zero in this block. If the block has any\r\n  // text at all, use the style of the first character.\r\n  if (startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(0);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction getInlineStyleForNonCollapsedSelection(content, selection) {\r\n  var startKey = selection.getStartKey();\r\n  var startOffset = selection.getStartOffset();\r\n  var startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If there is a character just inside the selection, use its style.\r\n  if (startOffset < startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(startOffset);\r\n  }\r\n\r\n  // Check if the selection at the end of a non-empty block. Use the last\r\n  // style in the block.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction lookUpwardForInlineStyle(content, fromKey) {\r\n  var lastNonEmpty = content.getBlockMap().reverse().skipUntil(function (_, k) {\r\n    return k === fromKey;\r\n  }).skip(1).skipUntil(function (block, _) {\r\n    return block.getLength();\r\n  }).first();\r\n\r\n  if (lastNonEmpty) return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength() - 1);\r\n  return OrderedSet();\r\n}\r\n\r\nmodule.exports = EditorState;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/draft-js/lib/EditorState.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}}],"sources":{"node_modules/draft-js/lib/EditorState.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EditorState\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\n\r\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar BlockTree = require('./BlockTree');\r\nvar ContentState = require('./ContentState');\r\nvar EditorBidiService = require('./EditorBidiService');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar OrderedSet = Immutable.OrderedSet,\r\n    Record = Immutable.Record,\r\n    Stack = Immutable.Stack;\r\n\r\n\r\nvar defaultRecord = {\r\n  allowUndo: true,\r\n  currentContent: null,\r\n  decorator: null,\r\n  directionMap: null,\r\n  forceSelection: false,\r\n  inCompositionMode: false,\r\n  inlineStyleOverride: null,\r\n  lastChangeType: null,\r\n  nativelyRenderedContent: null,\r\n  redoStack: Stack(),\r\n  selection: null,\r\n  treeMap: null,\r\n  undoStack: Stack()\r\n};\r\n\r\nvar EditorStateRecord = Record(defaultRecord);\r\n\r\nvar EditorState = function () {\r\n  EditorState.createEmpty = function createEmpty(decorator) {\r\n    return EditorState.createWithContent(ContentState.createFromText(''), decorator);\r\n  };\r\n\r\n  EditorState.createWithContent = function createWithContent(contentState, decorator) {\r\n    var firstKey = contentState.getBlockMap().first().getKey();\r\n    return EditorState.create({\r\n      currentContent: contentState,\r\n      undoStack: Stack(),\r\n      redoStack: Stack(),\r\n      decorator: decorator || null,\r\n      selection: SelectionState.createEmpty(firstKey)\r\n    });\r\n  };\r\n\r\n  EditorState.create = function create(config) {\r\n    var currentContent = config.currentContent,\r\n        decorator = config.decorator;\r\n\r\n    var recordConfig = _extends({}, config, {\r\n      treeMap: generateNewTreeMap(currentContent, decorator),\r\n      directionMap: EditorBidiService.getDirectionMap(currentContent)\r\n    });\r\n    return new EditorState(new EditorStateRecord(recordConfig));\r\n  };\r\n\r\n  EditorState.set = function set(editorState, put) {\r\n    var map = editorState.getImmutable().withMutations(function (state) {\r\n      var existingDecorator = state.get('decorator');\r\n      var decorator = existingDecorator;\r\n      if (put.decorator === null) {\r\n        decorator = null;\r\n      } else if (put.decorator) {\r\n        decorator = put.decorator;\r\n      }\r\n\r\n      var newContent = put.currentContent || editorState.getCurrentContent();\r\n\r\n      if (decorator !== existingDecorator) {\r\n        var treeMap = state.get('treeMap');\r\n        var newTreeMap;\r\n        if (decorator && existingDecorator) {\r\n          newTreeMap = regenerateTreeForNewDecorator(newContent, newContent.getBlockMap(), treeMap, decorator, existingDecorator);\r\n        } else {\r\n          newTreeMap = generateNewTreeMap(newContent, decorator);\r\n        }\r\n\r\n        state.merge({\r\n          decorator: decorator,\r\n          treeMap: newTreeMap,\r\n          nativelyRenderedContent: null\r\n        });\r\n        return;\r\n      }\r\n\r\n      var existingContent = editorState.getCurrentContent();\r\n      if (newContent !== existingContent) {\r\n        state.set('treeMap', regenerateTreeForNewBlocks(editorState, newContent.getBlockMap(), newContent.getEntityMap(), decorator));\r\n      }\r\n\r\n      state.merge(put);\r\n    });\r\n\r\n    return new EditorState(map);\r\n  };\r\n\r\n  EditorState.prototype.toJS = function toJS() {\r\n    return this.getImmutable().toJS();\r\n  };\r\n\r\n  EditorState.prototype.getAllowUndo = function getAllowUndo() {\r\n    return this.getImmutable().get('allowUndo');\r\n  };\r\n\r\n  EditorState.prototype.getCurrentContent = function getCurrentContent() {\r\n    return this.getImmutable().get('currentContent');\r\n  };\r\n\r\n  EditorState.prototype.getUndoStack = function getUndoStack() {\r\n    return this.getImmutable().get('undoStack');\r\n  };\r\n\r\n  EditorState.prototype.getRedoStack = function getRedoStack() {\r\n    return this.getImmutable().get('redoStack');\r\n  };\r\n\r\n  EditorState.prototype.getSelection = function getSelection() {\r\n    return this.getImmutable().get('selection');\r\n  };\r\n\r\n  EditorState.prototype.getDecorator = function getDecorator() {\r\n    return this.getImmutable().get('decorator');\r\n  };\r\n\r\n  EditorState.prototype.isInCompositionMode = function isInCompositionMode() {\r\n    return this.getImmutable().get('inCompositionMode');\r\n  };\r\n\r\n  EditorState.prototype.mustForceSelection = function mustForceSelection() {\r\n    return this.getImmutable().get('forceSelection');\r\n  };\r\n\r\n  EditorState.prototype.getNativelyRenderedContent = function getNativelyRenderedContent() {\r\n    return this.getImmutable().get('nativelyRenderedContent');\r\n  };\r\n\r\n  EditorState.prototype.getLastChangeType = function getLastChangeType() {\r\n    return this.getImmutable().get('lastChangeType');\r\n  };\r\n\r\n  /**\r\n   * While editing, the user may apply inline style commands with a collapsed\r\n   * cursor, intending to type text that adopts the specified style. In this\r\n   * case, we track the specified style as an \"override\" that takes precedence\r\n   * over the inline style of the text adjacent to the cursor.\r\n   *\r\n   * If null, there is no override in place.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getInlineStyleOverride = function getInlineStyleOverride() {\r\n    return this.getImmutable().get('inlineStyleOverride');\r\n  };\r\n\r\n  EditorState.setInlineStyleOverride = function setInlineStyleOverride(editorState, inlineStyleOverride) {\r\n    return EditorState.set(editorState, { inlineStyleOverride: inlineStyleOverride });\r\n  };\r\n\r\n  /**\r\n   * Get the appropriate inline style for the editor state. If an\r\n   * override is in place, use it. Otherwise, the current style is\r\n   * based on the location of the selection state.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getCurrentInlineStyle = function getCurrentInlineStyle() {\r\n    var override = this.getInlineStyleOverride();\r\n    if (override != null) {\r\n      return override;\r\n    }\r\n\r\n    var content = this.getCurrentContent();\r\n    var selection = this.getSelection();\r\n\r\n    if (selection.isCollapsed()) {\r\n      return getInlineStyleForCollapsedSelection(content, selection);\r\n    }\r\n\r\n    return getInlineStyleForNonCollapsedSelection(content, selection);\r\n  };\r\n\r\n  EditorState.prototype.getBlockTree = function getBlockTree(blockKey) {\r\n    return this.getImmutable().getIn(['treeMap', blockKey]);\r\n  };\r\n\r\n  EditorState.prototype.isSelectionAtStartOfContent = function isSelectionAtStartOfContent() {\r\n    var firstKey = this.getCurrentContent().getBlockMap().first().getKey();\r\n    return this.getSelection().hasEdgeWithin(firstKey, 0, 0);\r\n  };\r\n\r\n  EditorState.prototype.isSelectionAtEndOfContent = function isSelectionAtEndOfContent() {\r\n    var content = this.getCurrentContent();\r\n    var blockMap = content.getBlockMap();\r\n    var last = blockMap.last();\r\n    var end = last.getLength();\r\n    return this.getSelection().hasEdgeWithin(last.getKey(), end, end);\r\n  };\r\n\r\n  EditorState.prototype.getDirectionMap = function getDirectionMap() {\r\n    return this.getImmutable().get('directionMap');\r\n  };\r\n\r\n  /**\r\n   * Incorporate native DOM selection changes into the EditorState. This\r\n   * method can be used when we simply want to accept whatever the DOM\r\n   * has given us to represent selection, and we do not need to re-render\r\n   * the editor.\r\n   *\r\n   * To forcibly move the DOM selection, see `EditorState.forceSelection`.\r\n   */\r\n\r\n\r\n  EditorState.acceptSelection = function acceptSelection(editorState, selection) {\r\n    return updateSelection(editorState, selection, false);\r\n  };\r\n\r\n  /**\r\n   * At times, we need to force the DOM selection to be where we\r\n   * need it to be. This can occur when the anchor or focus nodes\r\n   * are non-text nodes, for instance. In this case, we want to trigger\r\n   * a re-render of the editor, which in turn forces selection into\r\n   * the correct place in the DOM. The `forceSelection` method\r\n   * accomplishes this.\r\n   *\r\n   * This method should be used in cases where you need to explicitly\r\n   * move the DOM selection from one place to another without a change\r\n   * in ContentState.\r\n   */\r\n\r\n\r\n  EditorState.forceSelection = function forceSelection(editorState, selection) {\r\n    if (!selection.getHasFocus()) {\r\n      selection = selection.set('hasFocus', true);\r\n    }\r\n    return updateSelection(editorState, selection, true);\r\n  };\r\n\r\n  /**\r\n   * Move selection to the end of the editor without forcing focus.\r\n   */\r\n\r\n\r\n  EditorState.moveSelectionToEnd = function moveSelectionToEnd(editorState) {\r\n    var content = editorState.getCurrentContent();\r\n    var lastBlock = content.getLastBlock();\r\n    var lastKey = lastBlock.getKey();\r\n    var length = lastBlock.getLength();\r\n\r\n    return EditorState.acceptSelection(editorState, new SelectionState({\r\n      anchorKey: lastKey,\r\n      anchorOffset: length,\r\n      focusKey: lastKey,\r\n      focusOffset: length,\r\n      isBackward: false\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Force focus to the end of the editor. This is useful in scenarios\r\n   * where we want to programmatically focus the input and it makes sense\r\n   * to allow the user to continue working seamlessly.\r\n   */\r\n\r\n\r\n  EditorState.moveFocusToEnd = function moveFocusToEnd(editorState) {\r\n    var afterSelectionMove = EditorState.moveSelectionToEnd(editorState);\r\n    return EditorState.forceSelection(afterSelectionMove, afterSelectionMove.getSelection());\r\n  };\r\n\r\n  /**\r\n   * Push the current ContentState onto the undo stack if it should be\r\n   * considered a boundary state, and set the provided ContentState as the\r\n   * new current content.\r\n   */\r\n\r\n\r\n  EditorState.push = function push(editorState, contentState, changeType) {\r\n    if (editorState.getCurrentContent() === contentState) {\r\n      return editorState;\r\n    }\r\n\r\n    var forceSelection = changeType !== 'insert-characters';\r\n    var directionMap = EditorBidiService.getDirectionMap(contentState, editorState.getDirectionMap());\r\n\r\n    if (!editorState.getAllowUndo()) {\r\n      return EditorState.set(editorState, {\r\n        currentContent: contentState,\r\n        directionMap: directionMap,\r\n        lastChangeType: changeType,\r\n        selection: contentState.getSelectionAfter(),\r\n        forceSelection: forceSelection,\r\n        inlineStyleOverride: null\r\n      });\r\n    }\r\n\r\n    var selection = editorState.getSelection();\r\n    var currentContent = editorState.getCurrentContent();\r\n    var undoStack = editorState.getUndoStack();\r\n    var newContent = contentState;\r\n\r\n    if (selection !== currentContent.getSelectionAfter() || mustBecomeBoundary(editorState, changeType)) {\r\n      undoStack = undoStack.push(currentContent);\r\n      newContent = newContent.set('selectionBefore', selection);\r\n    } else if (changeType === 'insert-characters' || changeType === 'backspace-character' || changeType === 'delete-character') {\r\n      // Preserve the previous selection.\r\n      newContent = newContent.set('selectionBefore', currentContent.getSelectionBefore());\r\n    }\r\n\r\n    var inlineStyleOverride = editorState.getInlineStyleOverride();\r\n\r\n    // Don't discard inline style overrides for the following change types:\r\n    var overrideChangeTypes = ['adjust-depth', 'change-block-type', 'split-block'];\r\n\r\n    if (overrideChangeTypes.indexOf(changeType) === -1) {\r\n      inlineStyleOverride = null;\r\n    }\r\n\r\n    var editorStateChanges = {\r\n      currentContent: newContent,\r\n      directionMap: directionMap,\r\n      undoStack: undoStack,\r\n      redoStack: Stack(),\r\n      lastChangeType: changeType,\r\n      selection: contentState.getSelectionAfter(),\r\n      forceSelection: forceSelection,\r\n      inlineStyleOverride: inlineStyleOverride\r\n    };\r\n\r\n    return EditorState.set(editorState, editorStateChanges);\r\n  };\r\n\r\n  /**\r\n   * Make the top ContentState in the undo stack the new current content and\r\n   * push the current content onto the redo stack.\r\n   */\r\n\r\n\r\n  EditorState.undo = function undo(editorState) {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    var undoStack = editorState.getUndoStack();\r\n    var newCurrentContent = undoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    var currentContent = editorState.getCurrentContent();\r\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap: directionMap,\r\n      undoStack: undoStack.shift(),\r\n      redoStack: editorState.getRedoStack().push(currentContent),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'undo',\r\n      nativelyRenderedContent: null,\r\n      selection: currentContent.getSelectionBefore()\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Make the top ContentState in the redo stack the new current content and\r\n   * push the current content onto the undo stack.\r\n   */\r\n\r\n\r\n  EditorState.redo = function redo(editorState) {\r\n    if (!editorState.getAllowUndo()) {\r\n      return editorState;\r\n    }\r\n\r\n    var redoStack = editorState.getRedoStack();\r\n    var newCurrentContent = redoStack.peek();\r\n    if (!newCurrentContent) {\r\n      return editorState;\r\n    }\r\n\r\n    var currentContent = editorState.getCurrentContent();\r\n    var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\r\n\r\n    return EditorState.set(editorState, {\r\n      currentContent: newCurrentContent,\r\n      directionMap: directionMap,\r\n      undoStack: editorState.getUndoStack().push(currentContent),\r\n      redoStack: redoStack.shift(),\r\n      forceSelection: true,\r\n      inlineStyleOverride: null,\r\n      lastChangeType: 'redo',\r\n      nativelyRenderedContent: null,\r\n      selection: newCurrentContent.getSelectionAfter()\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n\r\n\r\n  function EditorState(immutable) {\r\n    _classCallCheck(this, EditorState);\r\n\r\n    this._immutable = immutable;\r\n  }\r\n\r\n  /**\r\n   * Not for public consumption.\r\n   */\r\n\r\n\r\n  EditorState.prototype.getImmutable = function getImmutable() {\r\n    return this._immutable;\r\n  };\r\n\r\n  return EditorState;\r\n}();\r\n\r\n/**\r\n * Set the supplied SelectionState as the new current selection, and set\r\n * the `force` flag to trigger manual selection placement by the view.\r\n */\r\n\r\n\r\nfunction updateSelection(editorState, selection, forceSelection) {\r\n  return EditorState.set(editorState, {\r\n    selection: selection,\r\n    forceSelection: forceSelection,\r\n    nativelyRenderedContent: null,\r\n    inlineStyleOverride: null\r\n  });\r\n}\r\n\r\n/**\r\n * Regenerate the entire tree map for a given ContentState and decorator.\r\n * Returns an OrderedMap that maps all available ContentBlock objects.\r\n */\r\nfunction generateNewTreeMap(contentState, decorator) {\r\n  return contentState.getBlockMap().map(function (block) {\r\n    return BlockTree.generate(contentState, block, decorator);\r\n  }).toOrderedMap();\r\n}\r\n\r\n/**\r\n * Regenerate tree map objects for all ContentBlocks that have changed\r\n * between the current editorState and newContent. Returns an OrderedMap\r\n * with only changed regenerated tree map objects.\r\n */\r\nfunction regenerateTreeForNewBlocks(editorState, newBlockMap, newEntityMap, decorator) {\r\n  var contentState = editorState.getCurrentContent().set('entityMap', newEntityMap);\r\n  var prevBlockMap = contentState.getBlockMap();\r\n  var prevTreeMap = editorState.getImmutable().get('treeMap');\r\n  return prevTreeMap.merge(newBlockMap.toSeq().filter(function (block, key) {\r\n    return block !== prevBlockMap.get(key);\r\n  }).map(function (block) {\r\n    return BlockTree.generate(contentState, block, decorator);\r\n  }));\r\n}\r\n\r\n/**\r\n * Generate tree map objects for a new decorator object, preserving any\r\n * decorations that are unchanged from the previous decorator.\r\n *\r\n * Note that in order for this to perform optimally, decoration Lists for\r\n * decorators should be preserved when possible to allow for direct immutable\r\n * List comparison.\r\n */\r\nfunction regenerateTreeForNewDecorator(content, blockMap, previousTreeMap, decorator, existingDecorator) {\r\n  return previousTreeMap.merge(blockMap.toSeq().filter(function (block) {\r\n    return decorator.getDecorations(block, content) !== existingDecorator.getDecorations(block, content);\r\n  }).map(function (block) {\r\n    return BlockTree.generate(content, block, decorator);\r\n  }));\r\n}\r\n\r\n/**\r\n * Return whether a change should be considered a boundary state, given\r\n * the previous change type. Allows us to discard potential boundary states\r\n * during standard typing or deletion behavior.\r\n */\r\nfunction mustBecomeBoundary(editorState, changeType) {\r\n  var lastChangeType = editorState.getLastChangeType();\r\n  return changeType !== lastChangeType || changeType !== 'insert-characters' && changeType !== 'backspace-character' && changeType !== 'delete-character';\r\n}\r\n\r\nfunction getInlineStyleForCollapsedSelection(content, selection) {\r\n  var startKey = selection.getStartKey();\r\n  var startOffset = selection.getStartOffset();\r\n  var startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If the cursor is not at the start of the block, look backward to\r\n  // preserve the style of the preceding character.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // The caret is at position zero in this block. If the block has any\r\n  // text at all, use the style of the first character.\r\n  if (startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(0);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction getInlineStyleForNonCollapsedSelection(content, selection) {\r\n  var startKey = selection.getStartKey();\r\n  var startOffset = selection.getStartOffset();\r\n  var startBlock = content.getBlockForKey(startKey);\r\n\r\n  // If there is a character just inside the selection, use its style.\r\n  if (startOffset < startBlock.getLength()) {\r\n    return startBlock.getInlineStyleAt(startOffset);\r\n  }\r\n\r\n  // Check if the selection at the end of a non-empty block. Use the last\r\n  // style in the block.\r\n  if (startOffset > 0) {\r\n    return startBlock.getInlineStyleAt(startOffset - 1);\r\n  }\r\n\r\n  // Otherwise, look upward in the document to find the closest character.\r\n  return lookUpwardForInlineStyle(content, startKey);\r\n}\r\n\r\nfunction lookUpwardForInlineStyle(content, fromKey) {\r\n  var lastNonEmpty = content.getBlockMap().reverse().skipUntil(function (_, k) {\r\n    return k === fromKey;\r\n  }).skip(1).skipUntil(function (block, _) {\r\n    return block.getLength();\r\n  }).first();\r\n\r\n  if (lastNonEmpty) return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength() - 1);\r\n  return OrderedSet();\r\n}\r\n\r\nmodule.exports = EditorState;"},"lineCount":561}},"error":null,"hash":"35c80007ad0af3b87361189e206c6dfc","cacheData":{"env":{}}}