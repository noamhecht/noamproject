{"id":"node_modules/async-validator/es/index.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\package.json","includedInParent":true,"mtime":1590320300958},{"name":"./util","loc":{"line":11,"column":20},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\index.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\util.js"},{"name":"./validator/","loc":{"line":13,"column":25},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\index.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\validator\\index.js"},{"name":"./messages","loc":{"line":17,"column":25},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\index.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\async-validator\\es\\messages.js"}],"generated":{"js":"'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _util = require('./util');\r\n\r\nvar _validator = require('./validator/');\r\n\r\nvar _validator2 = _interopRequireDefault(_validator);\r\n\r\nvar _messages2 = require('./messages');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\n/**\r\n *  Encapsulates a validation schema.\r\n *\r\n *  @param descriptor An object declaring validation rules\r\n *  for this schema.\r\n */\r\nfunction Schema(descriptor) {\r\n  this.rules = null;\r\n  this._messages = _messages2.messages;\r\n  this.define(descriptor);\r\n}\r\n\r\nSchema.prototype = {\r\n  messages: function messages(_messages) {\r\n    if (_messages) {\r\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\r\n    }\r\n    return this._messages;\r\n  },\r\n  define: function define(rules) {\r\n    if (!rules) {\r\n      throw new Error('Cannot configure a schema with no rules');\r\n    }\r\n    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\r\n      throw new Error('Rules must be an object');\r\n    }\r\n    this.rules = {};\r\n    var z = void 0;\r\n    var item = void 0;\r\n    for (z in rules) {\r\n      if (rules.hasOwnProperty(z)) {\r\n        item = rules[z];\r\n        this.rules[z] = Array.isArray(item) ? item : [item];\r\n      }\r\n    }\r\n  },\r\n  validate: function validate(source_) {\r\n    var _this = this;\r\n\r\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\r\n\r\n    var source = source_;\r\n    var options = o;\r\n    var callback = oc;\r\n    if (typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n    if (!this.rules || Object.keys(this.rules).length === 0) {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n\r\n    function complete(results) {\r\n      var i = void 0;\r\n      var errors = [];\r\n      var fields = {};\r\n\r\n      function add(e) {\r\n        if (Array.isArray(e)) {\r\n          var _errors;\r\n\r\n          errors = (_errors = errors).concat.apply(_errors, e);\r\n        } else {\r\n          errors.push(e);\r\n        }\r\n      }\r\n\r\n      for (i = 0; i < results.length; i++) {\r\n        add(results[i]);\r\n      }\r\n      if (!errors.length) {\r\n        errors = null;\r\n        fields = null;\r\n      } else {\r\n        fields = (0, _util.convertFieldsError)(errors);\r\n      }\r\n      callback(errors, fields);\r\n    }\r\n\r\n    if (options.messages) {\r\n      var messages = this.messages();\r\n      if (messages === _messages2.messages) {\r\n        messages = (0, _messages2.newMessages)();\r\n      }\r\n      (0, _util.deepMerge)(messages, options.messages);\r\n      options.messages = messages;\r\n    } else {\r\n      options.messages = this.messages();\r\n    }\r\n    var arr = void 0;\r\n    var value = void 0;\r\n    var series = {};\r\n    var keys = options.keys || Object.keys(this.rules);\r\n    keys.forEach(function (z) {\r\n      arr = _this.rules[z];\r\n      value = source[z];\r\n      arr.forEach(function (r) {\r\n        var rule = r;\r\n        if (typeof rule.transform === 'function') {\r\n          if (source === source_) {\r\n            source = _extends({}, source);\r\n          }\r\n          value = source[z] = rule.transform(value);\r\n        }\r\n        if (typeof rule === 'function') {\r\n          rule = {\r\n            validator: rule\r\n          };\r\n        } else {\r\n          rule = _extends({}, rule);\r\n        }\r\n        rule.validator = _this.getValidationMethod(rule);\r\n        rule.field = z;\r\n        rule.fullField = rule.fullField || z;\r\n        rule.type = _this.getType(rule);\r\n        if (!rule.validator) {\r\n          return;\r\n        }\r\n        series[z] = series[z] || [];\r\n        series[z].push({\r\n          rule: rule,\r\n          value: value,\r\n          source: source,\r\n          field: z\r\n        });\r\n      });\r\n    });\r\n    var errorFields = {};\r\n    return (0, _util.asyncMap)(series, options, function (data, doIt) {\r\n      var rule = data.rule;\r\n      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\r\n      deep = deep && (rule.required || !rule.required && data.value);\r\n      rule.field = data.field;\r\n\r\n      function addFullfield(key, schema) {\r\n        return _extends({}, schema, {\r\n          fullField: rule.fullField + '.' + key\r\n        });\r\n      }\r\n\r\n      function cb() {\r\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n        var errors = e;\r\n        if (!Array.isArray(errors)) {\r\n          errors = [errors];\r\n        }\r\n        if (!options.suppressWarning && errors.length) {\r\n          Schema.warning('async-validator:', errors);\r\n        }\r\n        if (errors.length && rule.message) {\r\n          errors = [].concat(rule.message);\r\n        }\r\n\r\n        errors = errors.map((0, _util.complementError)(rule));\r\n\r\n        if (options.first && errors.length) {\r\n          errorFields[rule.field] = 1;\r\n          return doIt(errors);\r\n        }\r\n        if (!deep) {\r\n          doIt(errors);\r\n        } else {\r\n          // if rule is required but the target object\r\n          // does not exist fail at the rule level and don't\r\n          // go deeper\r\n          if (rule.required && !data.value) {\r\n            if (rule.message) {\r\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\r\n            } else if (options.error) {\r\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\r\n            } else {\r\n              errors = [];\r\n            }\r\n            return doIt(errors);\r\n          }\r\n\r\n          var fieldsSchema = {};\r\n          if (rule.defaultField) {\r\n            for (var k in data.value) {\r\n              if (data.value.hasOwnProperty(k)) {\r\n                fieldsSchema[k] = rule.defaultField;\r\n              }\r\n            }\r\n          }\r\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\r\n          for (var f in fieldsSchema) {\r\n            if (fieldsSchema.hasOwnProperty(f)) {\r\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\r\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\r\n            }\r\n          }\r\n          var schema = new Schema(fieldsSchema);\r\n          schema.messages(options.messages);\r\n          if (data.rule.options) {\r\n            data.rule.options.messages = options.messages;\r\n            data.rule.options.error = options.error;\r\n          }\r\n          schema.validate(data.value, data.rule.options || options, function (errs) {\r\n            var finalErrors = [];\r\n            if (errors && errors.length) {\r\n              finalErrors.push.apply(finalErrors, errors);\r\n            }\r\n            if (errs && errs.length) {\r\n              finalErrors.push.apply(finalErrors, errs);\r\n            }\r\n            doIt(finalErrors.length ? finalErrors : null);\r\n          });\r\n        }\r\n      }\r\n\r\n      var res = void 0;\r\n      if (rule.asyncValidator) {\r\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\r\n      } else if (rule.validator) {\r\n        res = rule.validator(rule, data.value, cb, data.source, options);\r\n        if (res === true) {\r\n          cb();\r\n        } else if (res === false) {\r\n          cb(rule.message || rule.field + ' fails');\r\n        } else if (res instanceof Array) {\r\n          cb(res);\r\n        } else if (res instanceof Error) {\r\n          cb(res.message);\r\n        }\r\n      }\r\n      if (res && res.then) {\r\n        res.then(function () {\r\n          return cb();\r\n        }, function (e) {\r\n          return cb(e);\r\n        });\r\n      }\r\n    }, function (results) {\r\n      complete(results);\r\n    });\r\n  },\r\n  getType: function getType(rule) {\r\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\r\n      rule.type = 'pattern';\r\n    }\r\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\r\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\r\n    }\r\n    return rule.type || 'string';\r\n  },\r\n  getValidationMethod: function getValidationMethod(rule) {\r\n    if (typeof rule.validator === 'function') {\r\n      return rule.validator;\r\n    }\r\n    var keys = Object.keys(rule);\r\n    var messageIndex = keys.indexOf('message');\r\n    if (messageIndex !== -1) {\r\n      keys.splice(messageIndex, 1);\r\n    }\r\n    if (keys.length === 1 && keys[0] === 'required') {\r\n      return _validator2['default'].required;\r\n    }\r\n    return _validator2['default'][this.getType(rule)] || false;\r\n  }\r\n};\r\n\r\nSchema.register = function register(type, validator) {\r\n  if (typeof validator !== 'function') {\r\n    throw new Error('Cannot register a validator by type, validator is not a function');\r\n  }\r\n  _validator2['default'][type] = validator;\r\n};\r\n\r\nSchema.warning = _util.warning;\r\n\r\nSchema.messages = _messages2.messages;\r\n\r\nexports['default'] = Schema;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/async-validator/es/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/async-validator/es/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}}],"sources":{"node_modules/async-validator/es/index.js":"'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _util = require('./util');\r\n\r\nvar _validator = require('./validator/');\r\n\r\nvar _validator2 = _interopRequireDefault(_validator);\r\n\r\nvar _messages2 = require('./messages');\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\r\n/**\r\n *  Encapsulates a validation schema.\r\n *\r\n *  @param descriptor An object declaring validation rules\r\n *  for this schema.\r\n */\r\nfunction Schema(descriptor) {\r\n  this.rules = null;\r\n  this._messages = _messages2.messages;\r\n  this.define(descriptor);\r\n}\r\n\r\nSchema.prototype = {\r\n  messages: function messages(_messages) {\r\n    if (_messages) {\r\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\r\n    }\r\n    return this._messages;\r\n  },\r\n  define: function define(rules) {\r\n    if (!rules) {\r\n      throw new Error('Cannot configure a schema with no rules');\r\n    }\r\n    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {\r\n      throw new Error('Rules must be an object');\r\n    }\r\n    this.rules = {};\r\n    var z = void 0;\r\n    var item = void 0;\r\n    for (z in rules) {\r\n      if (rules.hasOwnProperty(z)) {\r\n        item = rules[z];\r\n        this.rules[z] = Array.isArray(item) ? item : [item];\r\n      }\r\n    }\r\n  },\r\n  validate: function validate(source_) {\r\n    var _this = this;\r\n\r\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\r\n\r\n    var source = source_;\r\n    var options = o;\r\n    var callback = oc;\r\n    if (typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n    if (!this.rules || Object.keys(this.rules).length === 0) {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n\r\n    function complete(results) {\r\n      var i = void 0;\r\n      var errors = [];\r\n      var fields = {};\r\n\r\n      function add(e) {\r\n        if (Array.isArray(e)) {\r\n          var _errors;\r\n\r\n          errors = (_errors = errors).concat.apply(_errors, e);\r\n        } else {\r\n          errors.push(e);\r\n        }\r\n      }\r\n\r\n      for (i = 0; i < results.length; i++) {\r\n        add(results[i]);\r\n      }\r\n      if (!errors.length) {\r\n        errors = null;\r\n        fields = null;\r\n      } else {\r\n        fields = (0, _util.convertFieldsError)(errors);\r\n      }\r\n      callback(errors, fields);\r\n    }\r\n\r\n    if (options.messages) {\r\n      var messages = this.messages();\r\n      if (messages === _messages2.messages) {\r\n        messages = (0, _messages2.newMessages)();\r\n      }\r\n      (0, _util.deepMerge)(messages, options.messages);\r\n      options.messages = messages;\r\n    } else {\r\n      options.messages = this.messages();\r\n    }\r\n    var arr = void 0;\r\n    var value = void 0;\r\n    var series = {};\r\n    var keys = options.keys || Object.keys(this.rules);\r\n    keys.forEach(function (z) {\r\n      arr = _this.rules[z];\r\n      value = source[z];\r\n      arr.forEach(function (r) {\r\n        var rule = r;\r\n        if (typeof rule.transform === 'function') {\r\n          if (source === source_) {\r\n            source = _extends({}, source);\r\n          }\r\n          value = source[z] = rule.transform(value);\r\n        }\r\n        if (typeof rule === 'function') {\r\n          rule = {\r\n            validator: rule\r\n          };\r\n        } else {\r\n          rule = _extends({}, rule);\r\n        }\r\n        rule.validator = _this.getValidationMethod(rule);\r\n        rule.field = z;\r\n        rule.fullField = rule.fullField || z;\r\n        rule.type = _this.getType(rule);\r\n        if (!rule.validator) {\r\n          return;\r\n        }\r\n        series[z] = series[z] || [];\r\n        series[z].push({\r\n          rule: rule,\r\n          value: value,\r\n          source: source,\r\n          field: z\r\n        });\r\n      });\r\n    });\r\n    var errorFields = {};\r\n    return (0, _util.asyncMap)(series, options, function (data, doIt) {\r\n      var rule = data.rule;\r\n      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');\r\n      deep = deep && (rule.required || !rule.required && data.value);\r\n      rule.field = data.field;\r\n\r\n      function addFullfield(key, schema) {\r\n        return _extends({}, schema, {\r\n          fullField: rule.fullField + '.' + key\r\n        });\r\n      }\r\n\r\n      function cb() {\r\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n        var errors = e;\r\n        if (!Array.isArray(errors)) {\r\n          errors = [errors];\r\n        }\r\n        if (!options.suppressWarning && errors.length) {\r\n          Schema.warning('async-validator:', errors);\r\n        }\r\n        if (errors.length && rule.message) {\r\n          errors = [].concat(rule.message);\r\n        }\r\n\r\n        errors = errors.map((0, _util.complementError)(rule));\r\n\r\n        if (options.first && errors.length) {\r\n          errorFields[rule.field] = 1;\r\n          return doIt(errors);\r\n        }\r\n        if (!deep) {\r\n          doIt(errors);\r\n        } else {\r\n          // if rule is required but the target object\r\n          // does not exist fail at the rule level and don't\r\n          // go deeper\r\n          if (rule.required && !data.value) {\r\n            if (rule.message) {\r\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\r\n            } else if (options.error) {\r\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\r\n            } else {\r\n              errors = [];\r\n            }\r\n            return doIt(errors);\r\n          }\r\n\r\n          var fieldsSchema = {};\r\n          if (rule.defaultField) {\r\n            for (var k in data.value) {\r\n              if (data.value.hasOwnProperty(k)) {\r\n                fieldsSchema[k] = rule.defaultField;\r\n              }\r\n            }\r\n          }\r\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\r\n          for (var f in fieldsSchema) {\r\n            if (fieldsSchema.hasOwnProperty(f)) {\r\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\r\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\r\n            }\r\n          }\r\n          var schema = new Schema(fieldsSchema);\r\n          schema.messages(options.messages);\r\n          if (data.rule.options) {\r\n            data.rule.options.messages = options.messages;\r\n            data.rule.options.error = options.error;\r\n          }\r\n          schema.validate(data.value, data.rule.options || options, function (errs) {\r\n            var finalErrors = [];\r\n            if (errors && errors.length) {\r\n              finalErrors.push.apply(finalErrors, errors);\r\n            }\r\n            if (errs && errs.length) {\r\n              finalErrors.push.apply(finalErrors, errs);\r\n            }\r\n            doIt(finalErrors.length ? finalErrors : null);\r\n          });\r\n        }\r\n      }\r\n\r\n      var res = void 0;\r\n      if (rule.asyncValidator) {\r\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\r\n      } else if (rule.validator) {\r\n        res = rule.validator(rule, data.value, cb, data.source, options);\r\n        if (res === true) {\r\n          cb();\r\n        } else if (res === false) {\r\n          cb(rule.message || rule.field + ' fails');\r\n        } else if (res instanceof Array) {\r\n          cb(res);\r\n        } else if (res instanceof Error) {\r\n          cb(res.message);\r\n        }\r\n      }\r\n      if (res && res.then) {\r\n        res.then(function () {\r\n          return cb();\r\n        }, function (e) {\r\n          return cb(e);\r\n        });\r\n      }\r\n    }, function (results) {\r\n      complete(results);\r\n    });\r\n  },\r\n  getType: function getType(rule) {\r\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\r\n      rule.type = 'pattern';\r\n    }\r\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\r\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\r\n    }\r\n    return rule.type || 'string';\r\n  },\r\n  getValidationMethod: function getValidationMethod(rule) {\r\n    if (typeof rule.validator === 'function') {\r\n      return rule.validator;\r\n    }\r\n    var keys = Object.keys(rule);\r\n    var messageIndex = keys.indexOf('message');\r\n    if (messageIndex !== -1) {\r\n      keys.splice(messageIndex, 1);\r\n    }\r\n    if (keys.length === 1 && keys[0] === 'required') {\r\n      return _validator2['default'].required;\r\n    }\r\n    return _validator2['default'][this.getType(rule)] || false;\r\n  }\r\n};\r\n\r\nSchema.register = function register(type, validator) {\r\n  if (typeof validator !== 'function') {\r\n    throw new Error('Cannot register a validator by type, validator is not a function');\r\n  }\r\n  _validator2['default'][type] = validator;\r\n};\r\n\r\nSchema.warning = _util.warning;\r\n\r\nSchema.messages = _messages2.messages;\r\n\r\nexports['default'] = Schema;"},"lineCount":298}},"error":null,"hash":"8f19fcc2f43abaf188bc42d6a479cbfb","cacheData":{"env":{}}}