{"id":"node_modules/enquire.js/src/MediaQuery.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590303462313},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590303416264},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\enquire.js\\package.json","includedInParent":true,"mtime":1590303448067},{"name":"./QueryHandler","loc":{"line":1,"column":27},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\enquire.js\\src\\MediaQuery.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\enquire.js\\src\\QueryHandler.js"},{"name":"./Util","loc":{"line":2,"column":19},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\enquire.js\\src\\MediaQuery.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\enquire.js\\src\\Util.js"}],"generated":{"js":"var QueryHandler = require('./QueryHandler');\r\nvar each = require('./Util').each;\r\n\r\n/**\r\n * Represents a single media query, manages it's state and registered handlers for this query\r\n *\r\n * @constructor\r\n * @param {string} query the media query string\r\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\r\n */\r\nfunction MediaQuery(query, isUnconditional) {\r\n    this.query = query;\r\n    this.isUnconditional = isUnconditional;\r\n    this.handlers = [];\r\n    this.mql = window.matchMedia(query);\r\n\r\n    var self = this;\r\n    this.listener = function(mql) {\r\n        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\r\n        self.mql = mql.currentTarget || mql;\r\n        self.assess();\r\n    };\r\n    this.mql.addListener(this.listener);\r\n}\r\n\r\nMediaQuery.prototype = {\r\n\r\n    constuctor : MediaQuery,\r\n\r\n    /**\r\n     * add a handler for this query, triggering if already active\r\n     *\r\n     * @param {object} handler\r\n     * @param {function} handler.match callback for when query is activated\r\n     * @param {function} [handler.unmatch] callback for when query is deactivated\r\n     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\r\n     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\r\n     */\r\n    addHandler : function(handler) {\r\n        var qh = new QueryHandler(handler);\r\n        this.handlers.push(qh);\r\n\r\n        this.matches() && qh.on();\r\n    },\r\n\r\n    /**\r\n     * removes the given handler from the collection, and calls it's destroy methods\r\n     *\r\n     * @param {object || function} handler the handler to remove\r\n     */\r\n    removeHandler : function(handler) {\r\n        var handlers = this.handlers;\r\n        each(handlers, function(h, i) {\r\n            if(h.equals(handler)) {\r\n                h.destroy();\r\n                return !handlers.splice(i,1); //remove from array and exit each early\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Determine whether the media query should be considered a match\r\n     *\r\n     * @return {Boolean} true if media query can be considered a match, false otherwise\r\n     */\r\n    matches : function() {\r\n        return this.mql.matches || this.isUnconditional;\r\n    },\r\n\r\n    /**\r\n     * Clears all handlers and unbinds events\r\n     */\r\n    clear : function() {\r\n        each(this.handlers, function(handler) {\r\n            handler.destroy();\r\n        });\r\n        this.mql.removeListener(this.listener);\r\n        this.handlers.length = 0; //clear array\r\n    },\r\n\r\n    /*\r\n        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\r\n        */\r\n    assess : function() {\r\n        var action = this.matches() ? 'on' : 'off';\r\n\r\n        each(this.handlers, function(handler) {\r\n            handler[action]();\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = MediaQuery;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/enquire.js/src/MediaQuery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}}],"sources":{"node_modules/enquire.js/src/MediaQuery.js":"var QueryHandler = require('./QueryHandler');\r\nvar each = require('./Util').each;\r\n\r\n/**\r\n * Represents a single media query, manages it's state and registered handlers for this query\r\n *\r\n * @constructor\r\n * @param {string} query the media query string\r\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\r\n */\r\nfunction MediaQuery(query, isUnconditional) {\r\n    this.query = query;\r\n    this.isUnconditional = isUnconditional;\r\n    this.handlers = [];\r\n    this.mql = window.matchMedia(query);\r\n\r\n    var self = this;\r\n    this.listener = function(mql) {\r\n        // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\r\n        self.mql = mql.currentTarget || mql;\r\n        self.assess();\r\n    };\r\n    this.mql.addListener(this.listener);\r\n}\r\n\r\nMediaQuery.prototype = {\r\n\r\n    constuctor : MediaQuery,\r\n\r\n    /**\r\n     * add a handler for this query, triggering if already active\r\n     *\r\n     * @param {object} handler\r\n     * @param {function} handler.match callback for when query is activated\r\n     * @param {function} [handler.unmatch] callback for when query is deactivated\r\n     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\r\n     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\r\n     */\r\n    addHandler : function(handler) {\r\n        var qh = new QueryHandler(handler);\r\n        this.handlers.push(qh);\r\n\r\n        this.matches() && qh.on();\r\n    },\r\n\r\n    /**\r\n     * removes the given handler from the collection, and calls it's destroy methods\r\n     *\r\n     * @param {object || function} handler the handler to remove\r\n     */\r\n    removeHandler : function(handler) {\r\n        var handlers = this.handlers;\r\n        each(handlers, function(h, i) {\r\n            if(h.equals(handler)) {\r\n                h.destroy();\r\n                return !handlers.splice(i,1); //remove from array and exit each early\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Determine whether the media query should be considered a match\r\n     *\r\n     * @return {Boolean} true if media query can be considered a match, false otherwise\r\n     */\r\n    matches : function() {\r\n        return this.mql.matches || this.isUnconditional;\r\n    },\r\n\r\n    /**\r\n     * Clears all handlers and unbinds events\r\n     */\r\n    clear : function() {\r\n        each(this.handlers, function(handler) {\r\n            handler.destroy();\r\n        });\r\n        this.mql.removeListener(this.listener);\r\n        this.handlers.length = 0; //clear array\r\n    },\r\n\r\n    /*\r\n        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\r\n        */\r\n    assess : function() {\r\n        var action = this.matches() ? 'on' : 'off';\r\n\r\n        each(this.handlers, function(handler) {\r\n            handler[action]();\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = MediaQuery;\r\n"},"lineCount":94}},"error":null,"hash":"6adfd55eef6637ff1073c606ea47b421","cacheData":{"env":{}}}