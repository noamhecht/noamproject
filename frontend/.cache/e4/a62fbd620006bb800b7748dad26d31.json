{"id":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590320305554},{"name":"./ContentBlockNode","loc":{"line":16,"column":31},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\randomizeBlockMapKeys.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentBlockNode.js"},{"name":"immutable","loc":{"line":17,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\randomizeBlockMapKeys.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\immutable\\dist\\immutable.js"},{"name":"./generateRandomKey","loc":{"line":19,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\randomizeBlockMapKeys.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\generateRandomKey.js"}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule randomizeBlockMapKeys\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar Immutable = require('immutable');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\n\r\nvar OrderedMap = Immutable.OrderedMap;\r\n\r\n\r\nvar randomizeContentBlockNodeKeys = function randomizeContentBlockNodeKeys(blockMap) {\r\n  var newKeysRef = {};\r\n\r\n  // we keep track of root blocks in order to update subsequent sibling links\r\n  var lastRootBlock = void 0;\r\n\r\n  return OrderedMap(blockMap.withMutations(function (blockMapState) {\r\n    blockMapState.forEach(function (block, index) {\r\n      var oldKey = block.getKey();\r\n      var nextKey = block.getNextSiblingKey();\r\n      var prevKey = block.getPrevSiblingKey();\r\n      var childrenKeys = block.getChildKeys();\r\n      var parentKey = block.getParentKey();\r\n\r\n      // new key that we will use to build linking\r\n      var key = generateRandomKey();\r\n\r\n      // we will add it here to re-use it later\r\n      newKeysRef[oldKey] = key;\r\n\r\n      if (nextKey) {\r\n        var nextBlock = blockMapState.get(nextKey);\r\n        if (nextBlock) {\r\n          blockMapState.setIn([nextKey, 'prevSibling'], key);\r\n        } else {\r\n          // this can happen when generating random keys for fragments\r\n          blockMapState.setIn([oldKey, 'nextSibling'], null);\r\n        }\r\n      }\r\n\r\n      if (prevKey) {\r\n        var prevBlock = blockMapState.get(prevKey);\r\n        if (prevBlock) {\r\n          blockMapState.setIn([prevKey, 'nextSibling'], key);\r\n        } else {\r\n          // this can happen when generating random keys for fragments\r\n          blockMapState.setIn([oldKey, 'prevSibling'], null);\r\n        }\r\n      }\r\n\r\n      if (parentKey && blockMapState.get(parentKey)) {\r\n        var parentBlock = blockMapState.get(parentKey);\r\n        var parentChildrenList = parentBlock.getChildKeys();\r\n        blockMapState.setIn([parentKey, 'children'], parentChildrenList.set(parentChildrenList.indexOf(block.getKey()), key));\r\n      } else {\r\n        // blocks will then be treated as root block nodes\r\n        blockMapState.setIn([oldKey, 'parent'], null);\r\n\r\n        if (lastRootBlock) {\r\n          blockMapState.setIn([lastRootBlock.getKey(), 'nextSibling'], key);\r\n          blockMapState.setIn([oldKey, 'prevSibling'], newKeysRef[lastRootBlock.getKey()]);\r\n        }\r\n\r\n        lastRootBlock = blockMapState.get(oldKey);\r\n      }\r\n\r\n      childrenKeys.forEach(function (childKey) {\r\n        var childBlock = blockMapState.get(childKey);\r\n        if (childBlock) {\r\n          blockMapState.setIn([childKey, 'parent'], key);\r\n        } else {\r\n          blockMapState.setIn([oldKey, 'children'], block.getChildKeys().filter(function (child) {\r\n            return child !== childKey;\r\n          }));\r\n        }\r\n      });\r\n    });\r\n  }).toArray().map(function (block) {\r\n    return [newKeysRef[block.getKey()], block.set('key', newKeysRef[block.getKey()])];\r\n  }));\r\n};\r\n\r\nvar randomizeContentBlockKeys = function randomizeContentBlockKeys(blockMap) {\r\n  return OrderedMap(blockMap.toArray().map(function (block) {\r\n    var key = generateRandomKey();\r\n    return [key, block.set('key', key)];\r\n  }));\r\n};\r\n\r\nvar randomizeBlockMapKeys = function randomizeBlockMapKeys(blockMap) {\r\n  var isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\r\n\r\n  if (!isTreeBasedBlockMap) {\r\n    return randomizeContentBlockKeys(blockMap);\r\n  }\r\n\r\n  return randomizeContentBlockNodeKeys(blockMap);\r\n};\r\n\r\nmodule.exports = randomizeBlockMapKeys;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/draft-js/lib/randomizeBlockMapKeys.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}}],"sources":{"node_modules/draft-js/lib/randomizeBlockMapKeys.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule randomizeBlockMapKeys\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar Immutable = require('immutable');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\n\r\nvar OrderedMap = Immutable.OrderedMap;\r\n\r\n\r\nvar randomizeContentBlockNodeKeys = function randomizeContentBlockNodeKeys(blockMap) {\r\n  var newKeysRef = {};\r\n\r\n  // we keep track of root blocks in order to update subsequent sibling links\r\n  var lastRootBlock = void 0;\r\n\r\n  return OrderedMap(blockMap.withMutations(function (blockMapState) {\r\n    blockMapState.forEach(function (block, index) {\r\n      var oldKey = block.getKey();\r\n      var nextKey = block.getNextSiblingKey();\r\n      var prevKey = block.getPrevSiblingKey();\r\n      var childrenKeys = block.getChildKeys();\r\n      var parentKey = block.getParentKey();\r\n\r\n      // new key that we will use to build linking\r\n      var key = generateRandomKey();\r\n\r\n      // we will add it here to re-use it later\r\n      newKeysRef[oldKey] = key;\r\n\r\n      if (nextKey) {\r\n        var nextBlock = blockMapState.get(nextKey);\r\n        if (nextBlock) {\r\n          blockMapState.setIn([nextKey, 'prevSibling'], key);\r\n        } else {\r\n          // this can happen when generating random keys for fragments\r\n          blockMapState.setIn([oldKey, 'nextSibling'], null);\r\n        }\r\n      }\r\n\r\n      if (prevKey) {\r\n        var prevBlock = blockMapState.get(prevKey);\r\n        if (prevBlock) {\r\n          blockMapState.setIn([prevKey, 'nextSibling'], key);\r\n        } else {\r\n          // this can happen when generating random keys for fragments\r\n          blockMapState.setIn([oldKey, 'prevSibling'], null);\r\n        }\r\n      }\r\n\r\n      if (parentKey && blockMapState.get(parentKey)) {\r\n        var parentBlock = blockMapState.get(parentKey);\r\n        var parentChildrenList = parentBlock.getChildKeys();\r\n        blockMapState.setIn([parentKey, 'children'], parentChildrenList.set(parentChildrenList.indexOf(block.getKey()), key));\r\n      } else {\r\n        // blocks will then be treated as root block nodes\r\n        blockMapState.setIn([oldKey, 'parent'], null);\r\n\r\n        if (lastRootBlock) {\r\n          blockMapState.setIn([lastRootBlock.getKey(), 'nextSibling'], key);\r\n          blockMapState.setIn([oldKey, 'prevSibling'], newKeysRef[lastRootBlock.getKey()]);\r\n        }\r\n\r\n        lastRootBlock = blockMapState.get(oldKey);\r\n      }\r\n\r\n      childrenKeys.forEach(function (childKey) {\r\n        var childBlock = blockMapState.get(childKey);\r\n        if (childBlock) {\r\n          blockMapState.setIn([childKey, 'parent'], key);\r\n        } else {\r\n          blockMapState.setIn([oldKey, 'children'], block.getChildKeys().filter(function (child) {\r\n            return child !== childKey;\r\n          }));\r\n        }\r\n      });\r\n    });\r\n  }).toArray().map(function (block) {\r\n    return [newKeysRef[block.getKey()], block.set('key', newKeysRef[block.getKey()])];\r\n  }));\r\n};\r\n\r\nvar randomizeContentBlockKeys = function randomizeContentBlockKeys(blockMap) {\r\n  return OrderedMap(blockMap.toArray().map(function (block) {\r\n    var key = generateRandomKey();\r\n    return [key, block.set('key', key)];\r\n  }));\r\n};\r\n\r\nvar randomizeBlockMapKeys = function randomizeBlockMapKeys(blockMap) {\r\n  var isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\r\n\r\n  if (!isTreeBasedBlockMap) {\r\n    return randomizeContentBlockKeys(blockMap);\r\n  }\r\n\r\n  return randomizeContentBlockNodeKeys(blockMap);\r\n};\r\n\r\nmodule.exports = randomizeBlockMapKeys;"},"lineCount":113}},"error":null,"hash":"de59359028f3414547f0d9c67c3caaad","cacheData":{"env":{}}}