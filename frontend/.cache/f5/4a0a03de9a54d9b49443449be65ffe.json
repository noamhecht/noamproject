{"id":"node_modules/draft-js/lib/AtomicBlockUtils.js","dependencies":[{"name":"C:\\Users\\noamh\\noamproject\\frontend\\package.json","includedInParent":true,"mtime":1590320322767},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\.babelrc","includedInParent":true,"mtime":1590320260267},{"name":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1590320305554},{"name":"object-assign","loc":{"line":16,"column":22},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\object-assign\\index.js"},{"name":"./BlockMapBuilder","loc":{"line":20,"column":30},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\BlockMapBuilder.js"},{"name":"./CharacterMetadata","loc":{"line":21,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\CharacterMetadata.js"},{"name":"./ContentBlock","loc":{"line":22,"column":27},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentBlock.js"},{"name":"./ContentBlockNode","loc":{"line":23,"column":31},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\ContentBlockNode.js"},{"name":"./DraftFeatureFlags","loc":{"line":24,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\DraftFeatureFlags.js"},{"name":"./DraftModifier","loc":{"line":25,"column":28},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\DraftModifier.js"},{"name":"./EditorState","loc":{"line":26,"column":26},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\EditorState.js"},{"name":"immutable","loc":{"line":27,"column":24},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\immutable\\dist\\immutable.js"},{"name":"./SelectionState","loc":{"line":28,"column":29},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\SelectionState.js"},{"name":"./generateRandomKey","loc":{"line":30,"column":32},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\generateRandomKey.js"},{"name":"./moveBlockInContentState","loc":{"line":31,"column":38},"parent":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\AtomicBlockUtils.js","resolved":"C:\\Users\\noamh\\noamproject\\frontend\\node_modules\\draft-js\\lib\\moveBlockInContentState.js"}],"generated":{"js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule AtomicBlockUtils\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\n\r\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar BlockMapBuilder = require('./BlockMapBuilder');\r\nvar CharacterMetadata = require('./CharacterMetadata');\r\nvar ContentBlock = require('./ContentBlock');\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\r\nvar DraftModifier = require('./DraftModifier');\r\nvar EditorState = require('./EditorState');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\nvar moveBlockInContentState = require('./moveBlockInContentState');\r\n\r\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\r\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\r\n\r\nvar List = Immutable.List,\r\n    Repeat = Immutable.Repeat;\r\n\r\n\r\nvar AtomicBlockUtils = {\r\n  insertAtomicBlock: function insertAtomicBlock(editorState, entityKey, character) {\r\n    var contentState = editorState.getCurrentContent();\r\n    var selectionState = editorState.getSelection();\r\n\r\n    var afterRemoval = DraftModifier.removeRange(contentState, selectionState, 'backward');\r\n\r\n    var targetSelection = afterRemoval.getSelectionAfter();\r\n    var afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\r\n    var insertionTarget = afterSplit.getSelectionAfter();\r\n\r\n    var asAtomicBlock = DraftModifier.setBlockType(afterSplit, insertionTarget, 'atomic');\r\n\r\n    var charData = CharacterMetadata.create({ entity: entityKey });\r\n\r\n    var atomicBlockConfig = {\r\n      key: generateRandomKey(),\r\n      type: 'atomic',\r\n      text: character,\r\n      characterList: List(Repeat(charData, character.length))\r\n    };\r\n\r\n    var atomicDividerBlockConfig = {\r\n      key: generateRandomKey(),\r\n      type: 'unstyled'\r\n    };\r\n\r\n    if (experimentalTreeDataSupport) {\r\n      atomicBlockConfig = _extends({}, atomicBlockConfig, {\r\n        nextSibling: atomicDividerBlockConfig.key\r\n      });\r\n      atomicDividerBlockConfig = _extends({}, atomicDividerBlockConfig, {\r\n        prevSibling: atomicBlockConfig.key\r\n      });\r\n    }\r\n\r\n    var fragmentArray = [new ContentBlockRecord(atomicBlockConfig), new ContentBlockRecord(atomicDividerBlockConfig)];\r\n\r\n    var fragment = BlockMapBuilder.createFromArray(fragmentArray);\r\n\r\n    var withAtomicBlock = DraftModifier.replaceWithFragment(asAtomicBlock, insertionTarget, fragment);\r\n\r\n    var newContent = withAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withAtomicBlock.getSelectionAfter().set('hasFocus', true)\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'insert-fragment');\r\n  },\r\n\r\n  moveAtomicBlock: function moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode) {\r\n    var contentState = editorState.getCurrentContent();\r\n    var selectionState = editorState.getSelection();\r\n\r\n    var withMovedAtomicBlock = void 0;\r\n\r\n    if (insertionMode === 'before' || insertionMode === 'after') {\r\n      var targetBlock = contentState.getBlockForKey(insertionMode === 'before' ? targetRange.getStartKey() : targetRange.getEndKey());\r\n\r\n      withMovedAtomicBlock = moveBlockInContentState(contentState, atomicBlock, targetBlock, insertionMode);\r\n    } else {\r\n      var afterRemoval = DraftModifier.removeRange(contentState, targetRange, 'backward');\r\n\r\n      var selectionAfterRemoval = afterRemoval.getSelectionAfter();\r\n      var _targetBlock = afterRemoval.getBlockForKey(selectionAfterRemoval.getFocusKey());\r\n\r\n      if (selectionAfterRemoval.getStartOffset() === 0) {\r\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'before');\r\n      } else if (selectionAfterRemoval.getEndOffset() === _targetBlock.getLength()) {\r\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'after');\r\n      } else {\r\n        var afterSplit = DraftModifier.splitBlock(afterRemoval, selectionAfterRemoval);\r\n\r\n        var selectionAfterSplit = afterSplit.getSelectionAfter();\r\n        var _targetBlock2 = afterSplit.getBlockForKey(selectionAfterSplit.getFocusKey());\r\n\r\n        withMovedAtomicBlock = moveBlockInContentState(afterSplit, atomicBlock, _targetBlock2, 'before');\r\n      }\r\n    }\r\n\r\n    var newContent = withMovedAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withMovedAtomicBlock.getSelectionAfter().set('hasFocus', true)\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'move-block');\r\n  }\r\n};\r\n\r\nmodule.exports = AtomicBlockUtils;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}}],"sources":{"node_modules/draft-js/lib/AtomicBlockUtils.js":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule AtomicBlockUtils\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nvar _assign = require('object-assign');\r\n\r\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar BlockMapBuilder = require('./BlockMapBuilder');\r\nvar CharacterMetadata = require('./CharacterMetadata');\r\nvar ContentBlock = require('./ContentBlock');\r\nvar ContentBlockNode = require('./ContentBlockNode');\r\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\r\nvar DraftModifier = require('./DraftModifier');\r\nvar EditorState = require('./EditorState');\r\nvar Immutable = require('immutable');\r\nvar SelectionState = require('./SelectionState');\r\n\r\nvar generateRandomKey = require('./generateRandomKey');\r\nvar moveBlockInContentState = require('./moveBlockInContentState');\r\n\r\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\r\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\r\n\r\nvar List = Immutable.List,\r\n    Repeat = Immutable.Repeat;\r\n\r\n\r\nvar AtomicBlockUtils = {\r\n  insertAtomicBlock: function insertAtomicBlock(editorState, entityKey, character) {\r\n    var contentState = editorState.getCurrentContent();\r\n    var selectionState = editorState.getSelection();\r\n\r\n    var afterRemoval = DraftModifier.removeRange(contentState, selectionState, 'backward');\r\n\r\n    var targetSelection = afterRemoval.getSelectionAfter();\r\n    var afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\r\n    var insertionTarget = afterSplit.getSelectionAfter();\r\n\r\n    var asAtomicBlock = DraftModifier.setBlockType(afterSplit, insertionTarget, 'atomic');\r\n\r\n    var charData = CharacterMetadata.create({ entity: entityKey });\r\n\r\n    var atomicBlockConfig = {\r\n      key: generateRandomKey(),\r\n      type: 'atomic',\r\n      text: character,\r\n      characterList: List(Repeat(charData, character.length))\r\n    };\r\n\r\n    var atomicDividerBlockConfig = {\r\n      key: generateRandomKey(),\r\n      type: 'unstyled'\r\n    };\r\n\r\n    if (experimentalTreeDataSupport) {\r\n      atomicBlockConfig = _extends({}, atomicBlockConfig, {\r\n        nextSibling: atomicDividerBlockConfig.key\r\n      });\r\n      atomicDividerBlockConfig = _extends({}, atomicDividerBlockConfig, {\r\n        prevSibling: atomicBlockConfig.key\r\n      });\r\n    }\r\n\r\n    var fragmentArray = [new ContentBlockRecord(atomicBlockConfig), new ContentBlockRecord(atomicDividerBlockConfig)];\r\n\r\n    var fragment = BlockMapBuilder.createFromArray(fragmentArray);\r\n\r\n    var withAtomicBlock = DraftModifier.replaceWithFragment(asAtomicBlock, insertionTarget, fragment);\r\n\r\n    var newContent = withAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withAtomicBlock.getSelectionAfter().set('hasFocus', true)\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'insert-fragment');\r\n  },\r\n\r\n  moveAtomicBlock: function moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode) {\r\n    var contentState = editorState.getCurrentContent();\r\n    var selectionState = editorState.getSelection();\r\n\r\n    var withMovedAtomicBlock = void 0;\r\n\r\n    if (insertionMode === 'before' || insertionMode === 'after') {\r\n      var targetBlock = contentState.getBlockForKey(insertionMode === 'before' ? targetRange.getStartKey() : targetRange.getEndKey());\r\n\r\n      withMovedAtomicBlock = moveBlockInContentState(contentState, atomicBlock, targetBlock, insertionMode);\r\n    } else {\r\n      var afterRemoval = DraftModifier.removeRange(contentState, targetRange, 'backward');\r\n\r\n      var selectionAfterRemoval = afterRemoval.getSelectionAfter();\r\n      var _targetBlock = afterRemoval.getBlockForKey(selectionAfterRemoval.getFocusKey());\r\n\r\n      if (selectionAfterRemoval.getStartOffset() === 0) {\r\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'before');\r\n      } else if (selectionAfterRemoval.getEndOffset() === _targetBlock.getLength()) {\r\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'after');\r\n      } else {\r\n        var afterSplit = DraftModifier.splitBlock(afterRemoval, selectionAfterRemoval);\r\n\r\n        var selectionAfterSplit = afterSplit.getSelectionAfter();\r\n        var _targetBlock2 = afterSplit.getBlockForKey(selectionAfterSplit.getFocusKey());\r\n\r\n        withMovedAtomicBlock = moveBlockInContentState(afterSplit, atomicBlock, _targetBlock2, 'before');\r\n      }\r\n    }\r\n\r\n    var newContent = withMovedAtomicBlock.merge({\r\n      selectionBefore: selectionState,\r\n      selectionAfter: withMovedAtomicBlock.getSelectionAfter().set('hasFocus', true)\r\n    });\r\n\r\n    return EditorState.push(editorState, newContent, 'move-block');\r\n  }\r\n};\r\n\r\nmodule.exports = AtomicBlockUtils;"},"lineCount":129}},"error":null,"hash":"47993e7186a61533313cf6023c62b40d","cacheData":{"env":{}}}